{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBAYC",
      "outputs": [
        {
          "internalType": "contract MyBAYC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNameAndSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50612e7f8061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c806395d89b4111620000c7578063b9edb1af1162000086578063b9edb1af1462000265578063ba414fa61462000279578063bd70d9f11462000294578063d591221f14620002a8578063e20c9f7114620002b2578063fa7626d414620002bc57600080fd5b806395d89b4114620002015780639642ddaf146200020b578063aa8c217c1462000215578063ac1717b0146200022e578063b5508aa9146200025b57600080fd5b80633f7286f411620001145780633f7286f414620001b157806366d9a9a014620001bb5780636ac1170114620001d457806385226c8114620001de578063916a17c614620001f757600080fd5b806306fdde0314620001565780630a9254e414620001785780631aeb10a614620001845780631ed7831c146200018e5780633e5e3c2314620001a7575b600080fd5b62000160620002ca565b6040516200016f91906200198e565b60405180910390f35b6200018262000360565b005b62000182620004c7565b6200019862000759565b6040516200016f9190620019aa565b62000198620007bd565b620001986200081f565b620001c562000881565b6040516200016f9190620019f9565b6200018262000974565b620001e862000b0c565b6040516200016f919062001ab0565b620001c562000be6565b6200016062000cd0565b6200018262000cdf565b6200021f60205481565b6040519081526020016200016f565b601e5462000242906001600160a01b031681565b6040516001600160a01b0390911681526020016200016f565b620001e862000e79565b601f5462000242906001600160a01b031681565b6200028362000f53565b60405190151581526020016200016f565b601d5462000242906001600160a01b031681565b6200018262001088565b620001986200135c565b600054620002839060ff1681565b601b8054620002d99062001b16565b80601f0160208091040260200160405190810160405280929190818152602001828054620003079062001b16565b8015620003585780601f106200032c5761010080835404028352916020019162000358565b820191906000526020600020905b8154815290600101906020018083116200033a57829003601f168201915b505050505081565b60056020819055506040518060400160405280601781526020017f4d7920426f7265642041706520596163687420436c7562000000000000000000815250601b9081620003ae919062001bbb565b506040805180820190915260048152634241594360e01b6020820152601c90620003d9908262001bbb565b50601b601c604051620003ec906200192c565b620003f992919062001d0d565b604051809103906000f08015801562000416573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526005815264757365723160d81b60208201526200045e90620013be565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260058152643ab9b2b91960d91b6020820152620004a590620013be565b601f80546001600160a01b0319166001600160a01b0392909216919091179055565b601d54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000512573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000538919062001d3f565b905060005b602054811015620005d957601d54601e546001600160a01b03918216916340c10f1991166200056d848662001d59565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620005b457600080fd5b505af1158015620005c9573d6000803e3d6000fd5b505050508060010190506200053d565b5060005b6020548110156200075557601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200064257600080fd5b505af115801562000657573d6000803e3d6000fd5b5050601d54601f5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529116925063095ea7b39150604401600060405180830381600087803b158015620006ac57600080fd5b505af1158015620006c1573d6000803e3d6000fd5b5050601d5460405163020604bf60e21b8152600481018590526200074c93506001600160a01b03909116915063081812fc90602401602060405180830381865afa15801562000714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200073a919062001d81565b601f546001600160a01b0316620013d2565b600101620005dd565b5050565b6060600d805480602002602001604051908101604052809291908181526020018280548015620007b357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000794575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015620007b3576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000794575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015620007b3576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000794575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156200096b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200095257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009135790505b50505050508152505081526020019060010190620008a5565b50505050905090565b601d54604080516306fdde0360e01b8152905162000a84926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015620009c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620009eb919081019062001dac565b601b8054620009fa9062001b16565b80601f016020809104026020016040519081016040528092919081815260200182805462000a289062001b16565b801562000a795780601f1062000a4d5761010080835404028352916020019162000a79565b820191906000526020600020905b81548152906001019060200180831162000a5b57829003601f168201915b5050505050620014de565b601d54604080516395d89b4160e01b8152905162000b0a926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000ad1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000afb919081019062001dac565b601c8054620009fa9062001b16565b565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200096b57838290600052602060002001805462000b529062001b16565b80601f016020809104026020016040519081016040528092919081815260200182805462000b809062001b16565b801562000bd15780601f1062000ba55761010080835404028352916020019162000bd1565b820191906000526020600020905b81548152906001019060200180831162000bb357829003601f168201915b50505050508152602001906001019062000b30565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156200096b5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000cb757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000c785790505b5050505050815250508152602001906001019062000c0a565b601c8054620002d99062001b16565b601d54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000d2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d50919062001d3f565b905060005b60205481101562000df157601d54601e546001600160a01b03918216916340c10f19911662000d85848662001d59565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801562000dcc57600080fd5b505af115801562000de1573d6000803e3d6000fd5b5050505080600101905062000d55565b50601d54601e546040516370a0823160e01b81526001600160a01b03918216600482015262000e769291909116906370a08231906024015b602060405180830381865afa15801562000e47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e6d919062001d3f565b60205462001615565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200096b57838290600052602060002001805462000ebf9062001b16565b80601f016020809104026020016040519081016040528092919081815260200182805462000eed9062001b16565b801562000f3e5780601f1062000f125761010080835404028352916020019162000f3e565b820191906000526020600020905b81548152906001019060200180831162000f2057829003601f168201915b50505050508152602001906001019062000e9d565b60008054610100900460ff161562000f745750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620010835760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001005917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001e65565b60408051601f1981840301815290829052620010219162001e98565b6000604051808303816000865af19150503d806000811462001060576040519150601f19603f3d011682016040523d82523d6000602084013e62001065565b606091505b50915050808060200190518101906200107f919062001eb6565b9150505b919050565b601d54604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620010d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010f9919062001d3f565b905060005b6020548110156200119a57601d54601e546001600160a01b03918216916340c10f1991166200112e848662001d59565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156200117557600080fd5b505af11580156200118a573d6000803e3d6000fd5b50505050806001019050620010fe565b5060005b6020548110156200129d57601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200120357600080fd5b505af115801562001218573d6000803e3d6000fd5b5050601d54601e54601f54604051632142170760e11b81526001600160a01b039283166004820152908216602482015260448101869052911692506342842e0e9150606401600060405180830381600087803b1580156200127857600080fd5b505af11580156200128d573d6000803e3d6000fd5b505050508060010190506200119e565b50601d54601e546040516370a0823160e01b81526001600160a01b039182166004820152620013209291909116906370a0823190602401602060405180830381865afa158015620012f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001318919062001d3f565b600062001615565b601d54601f546040516370a0823160e01b81526001600160a01b03918216600482015262000e769291909116906370a082319060240162000e29565b6060600c805480602002602001604051908101604052809291908181526020018280548015620007b3576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000794575050505050905090565b6000620013cb82620016fa565b5092915050565b806001600160a01b0316826001600160a01b03161462000755577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200145a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001493919062001eda565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620014cc919062001f1f565b60405180910390a16200075562001819565b80604051602001620014f1919062001e98565b60405160208183030381529060405280519060200120826040516020016200151a919062001e98565b604051602081830303815290604052805190602001201462000755577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015a39060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620015dc919062001f4a565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620014cc919062001f91565b80821462000755577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016889060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620016c1919062001fbc565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620014cc919062001ff5565b6000808260405160200162001710919062001e98565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa1580156200177c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017a2919062001d81565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620017e0908590879060040162002020565b600060405180830381600087803b158015620017fb57600080fd5b505af115801562001810573d6000803e3d6000fd5b50505050915091565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200191b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620018b6929160200162001e65565b60408051601f1981840301815290829052620018d29162001e98565b6000604051808303816000865af19150503d806000811462001911576040519150601f19603f3d011682016040523d82523d6000602084013e62001916565b606091505b505050505b6000805461ff001916610100179055565b610e03806200204783390190565b60005b83811015620019575781810151838201526020016200193d565b50506000910152565b600081518084526200197a8160208601602086016200193a565b601f01601f19169290920160200192915050565b602081526000620019a3602083018462001960565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620019ed5783516001600160a01b031683529284019291840191600101620019c6565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562001aa157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562001a8b5783516001600160e01b0319168252928b019260019290920191908b019062001a5f565b50978a0197955050509187019160010162001a21565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562001b0957603f1988860301845262001af685835162001960565b9450928501929085019060010162001ad7565b5092979650505050505050565b600181811c9082168062001b2b57607f821691505b60208210810362001b4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111562001bb657600081815260208120601f850160051c8101602086101562001b915750805b601f850160051c820191505b8181101562001bb25782815560010162001b9d565b5050505b505050565b815167ffffffffffffffff81111562001bd85762001bd862001b52565b62001bf08162001be9845462001b16565b8462001b68565b602080601f83116001811462001c28576000841562001c0f5750858301515b600019600386901b1c1916600185901b17855562001bb2565b600085815260208120601f198616915b8281101562001c595788860151825594840194600190910190840162001c38565b508582101562001c785787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815462001c978162001b16565b80855260206001838116801562001cb7576001811462001cd25762001d02565b60ff1985168884015283151560051b88018301955062001d02565b866000528260002060005b8581101562001cfa5781548a820186015290830190840162001cdd565b890184019650505b505050505092915050565b60408152600062001d22604083018562001c88565b828103602084015262001d36818562001c88565b95945050505050565b60006020828403121562001d5257600080fd5b5051919050565b8082018082111562001d7b57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121562001d9457600080fd5b81516001600160a01b0381168114620019a357600080fd5b60006020828403121562001dbf57600080fd5b815167ffffffffffffffff8082111562001dd857600080fd5b818401915084601f83011262001ded57600080fd5b81518181111562001e025762001e0262001b52565b604051601f8201601f19908116603f0116810190838211818310171562001e2d5762001e2d62001b52565b8160405282815287602084870101111562001e4757600080fd5b62001e5a8360208301602088016200193a565b979650505050505050565b6001600160e01b031983168152815160009062001e8a8160048501602087016200193a565b919091016004019392505050565b6000825162001eac8184602087016200193a565b9190910192915050565b60006020828403121562001ec957600080fd5b81518015158114620019a357600080fd5b60408152600062001f0560408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001f0560408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062001f7560408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262001f89818562001960565b949350505050565b60408152600062001f7560408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062001fe760408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600062001fe760408301600a8152690808080808149a59da1d60b21b602082015260400190565b6001600160a01b038316815260406020820181905260009062001f89908301846200196056fe60806040523480156200001157600080fd5b5060405162000e0338038062000e0383398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b0f80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461013657806342842e0e146101495780636352211e1461015c57806370a082311461016f57806395d89b4114610182578063e985e9c51461018a57600080fd5b806306fdde03146100ae578063081812fc146100cc578063095ea7b3146100f757806318160ddd1461010c57806323b872dd14610123575b600080fd5b6100b66101c8565b6040516100c391906108f6565b60405180910390f35b6100df6100da366004610944565b610256565b6040516001600160a01b0390911681526020016100c3565b61010a610105366004610974565b6102d1565b005b61011560025481565b6040519081526020016100c3565b61010a61013136600461099e565b6103b3565b61010a610144366004610974565b61056b565b61010a61015736600461099e565b610579565b6100df61016a366004610944565b610671565b61011561017d3660046109da565b6106d1565b6100b661073c565b6101b86101983660046109fc565b600660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100c3565b600080546101d590610a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610a2f565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b6000818152600360205260408120546001600160a01b03166102b55760405162461bcd60e51b81526020600482015260136024820152721d1bdad95b88191bd95cdb89dd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b6000818152600360205260409020546001600160a01b03163381148061031a57506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b6103575760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016102ac565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b0384811691161461040c5760405162461bcd60e51b815260206004820152600d60248201526c333937b690109e9037bbb732b960991b60448201526064016102ac565b6001600160a01b0382166104625760405162461bcd60e51b815260206004820152601860248201527f7472616e7366657220746f207a65726f2061646472657373000000000000000060448201526064016102ac565b61046d833383610749565b6104aa5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016102ac565b6001600160a01b03831660009081526004602052604081208054916104ce83610a7f565b90915550506001600160a01b03821660009081526004602052604081208054916104f783610a96565b9091555050600081815260036020908152604080832080546001600160a01b038088166001600160a01b031992831681179093556005909452828520805490911690559051849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61057582826107bc565b5050565b6105848383836103b3565b6001600160a01b0382163b158061062d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190610aaf565b6001600160e01b031916145b61066c5760405162461bcd60e51b815260206004820152601060248201526f1d5b9cd85999481c9958da5c1a595b9d60821b60448201526064016102ac565b505050565b6000818152600360205260409020546001600160a01b0316806106cc5760405162461bcd60e51b81526020600482015260136024820152721d1bdad95b88191bd95cdb89dd08195e1a5cdd606a1b60448201526064016102ac565b919050565b60006001600160a01b0382166107205760405162461bcd60e51b81526020600482015260146024820152736f776e6572203d207a65726f206164647265737360601b60448201526064016102ac565b506001600160a01b031660009081526004602052604090205490565b600180546101d590610a2f565b6000836001600160a01b0316836001600160a01b0316148061079057506001600160a01b0380851660009081526006602090815260408083209387168352929052205460ff165b806107b457506000828152600560205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b0382166108095760405162461bcd60e51b81526020600482015260146024820152736d696e7420746f207a65726f206164647265737360601b60448201526064016102ac565b6000818152600360205260409020546001600160a01b03161561085f5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481b5a5b9d195960921b60448201526064016102ac565b6001600160a01b038216600090815260046020526040812080549161088383610a96565b90915550506002805490600061089883610a96565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060208083528351808285015260005b8181101561092357858101830151858201604001528201610907565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561095657600080fd5b5035919050565b80356001600160a01b03811681146106cc57600080fd5b6000806040838503121561098757600080fd5b6109908361095d565b946020939093013593505050565b6000806000606084860312156109b357600080fd5b6109bc8461095d565b92506109ca6020850161095d565b9150604084013590509250925092565b6000602082840312156109ec57600080fd5b6109f58261095d565b9392505050565b60008060408385031215610a0f57600080fd5b610a188361095d565b9150610a266020840161095d565b90509250929050565b600181811c90821680610a4357607f821691505b602082108103610a6357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081610a8e57610a8e610a69565b506000190190565b600060018201610aa857610aa8610a69565b5060010190565b600060208284031215610ac157600080fd5b81516001600160e01b0319811681146109f557600080fdfea2646970667358221220ac5a96ed788f361df8c24cb1467e487bfd4cff276664ead997eea0cf002e3f0b64736f6c63430008130033a2646970667358221220668525192d35ab350f3df53c59573052bb4fafd7d01c872c4d8b2b1acd911a0f64736f6c63430008130033",
    "sourceMap": "171:1295:20:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3161:44:4;;;;;;;;;;;171:1295:20;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "171:1295:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:205;;;:::i;:::-;;1248:216;;;:::i;2161:134:7:-;;;:::i;:::-;;;;;;;:::i;2930:133::-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;553:115:20:-;;;:::i;2301:140:7:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;222:20:20:-;;;:::i;872:92::-;;;:::i;318:21::-;;;;;;;;;3959:25:21;;;3947:2;3932:18;318:21:20;3813:177:21;270:20:20;;;;;-1:-1:-1;;;;;270:20:20;;;;;;-1:-1:-1;;;;;4159:32:21;;;4141:51;;4129:2;4114:18;270:20:20;3995:203:21;1866:141:7;;;:::i;294:20:20:-;;;;;-1:-1:-1;;;;;294:20:20;;;1819:584:0;;;:::i;:::-;;;4368:14:21;;4361:22;4343:41;;4331:2;4316:18;1819:584:0;4203:187:21;246:20:20;;;;;-1:-1:-1;;;;;246:20:20;;;968:276;;;:::i;2013:142:7:-;;;:::i;1572:26:0:-;;;;;;;;;200:18:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;344:205::-;383:1;374:6;:10;;;;390:32;;;;;;;;;;;;;;;;;:4;:32;;;;;;:::i;:::-;-1:-1:-1;428:15:20;;;;;;;;;;;;-1:-1:-1;;;428:15:20;;;;:6;;:15;;:6;:15;:::i;:::-;;469:4;475:6;458:24;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;449:6:20;:33;;-1:-1:-1;;;;;;449:33:20;-1:-1:-1;;;;;449:33:20;;;;;;;;;;496:17;;;;;;;;;;;;-1:-1:-1;;;496:17:20;;;;;;:8;:17::i;:::-;488:5;:25;;-1:-1:-1;;;;;;488:25:20;-1:-1:-1;;;;;488:25:20;;;;;;;;;;527:17;;;;;;;;;;;;-1:-1:-1;;;527:17:20;;;;;;:8;:17::i;:::-;519:5;:25;;-1:-1:-1;;;;;;519:25:20;-1:-1:-1;;;;;519:25:20;;;;;;;;;;344:205::o;1248:216::-;724:6;;:20;;;-1:-1:-1;;;724:20:20;;;;702:19;;-1:-1:-1;;;;;724:6:20;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:42;;755:6;750:107;771:6;;767:1;:10;750:107;;;788:6;;800:5;;-1:-1:-1;;;;;788:6:20;;;;:11;;800:5;808:15;822:1;808:11;:15;:::i;:::-;788:37;;-1:-1:-1;;;;;;788:37:20;;;;;;;-1:-1:-1;;;;;9123:32:21;;;788:37:20;;;9105:51:21;9172:18;;;9165:34;9078:18;;788:37:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:3;;;;;750:107;;;;1302:6:::1;1297:163;1318:6;;1314:1;:10;1297:163;;;1344:5;::::0;1335:15:::1;::::0;-1:-1:-1;;;1335:15:20;;-1:-1:-1;;;;;1344:5:20;;::::1;1335:15;::::0;::::1;4141:51:21::0;1335:8:20;;::::1;::::0;4114:18:21;;1335:15:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1358:6:20::1;::::0;1373:5:::1;::::0;1358:24:::1;::::0;-1:-1:-1;;;1358:24:20;;-1:-1:-1;;;;;1373:5:20;;::::1;1358:24;::::0;::::1;9105:51:21::0;9172:18;;;9165:34;;;1358:6:20;::::1;::::0;-1:-1:-1;1358:14:20::1;::::0;-1:-1:-1;9078:18:21;;1358:24:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1399:6:20::1;::::0;:21:::1;::::0;-1:-1:-1;;;1399:21:20;;::::1;::::0;::::1;3959:25:21::0;;;1390:38:20::1;::::0;-1:-1:-1;;;;;;1399:6:20;;::::1;::::0;-1:-1:-1;1399:18:20::1;::::0;3932::21;;1399:21:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1422:5;::::0;-1:-1:-1;;;;;1422:5:20::1;1390:8;:38::i;:::-;1448:3;;1297:163;;;;696:172:::0;1248:216::o;2161:134:7:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;553:115:20:-;604:6;;:13;;;-1:-1:-1;;;604:13:20;;;;595:29;;-1:-1:-1;;;;;604:6:20;;:11;;:13;;;;;:6;;:13;;;;;;;:6;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;604:13:20;;;;;;;;;;;;:::i;:::-;619:4;595:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:29::i;:::-;639:6;;:15;;;-1:-1:-1;;;639:15:20;;;;630:33;;-1:-1:-1;;;;;639:6:20;;:13;;:15;;;;;:6;;:15;;;;;;;:6;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;639:15:20;;;;;;;;;;;;:::i;:::-;656:6;630:33;;;;;:::i;:::-;553:115::o;2301:140:7:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:20:20;;;;;;;:::i;872:92::-;724:6;;:20;;;-1:-1:-1;;;724:20:20;;;;702:19;;-1:-1:-1;;;;;724:6:20;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:42;;755:6;750:107;771:6;;767:1;:10;750:107;;;788:6;;800:5;;-1:-1:-1;;;;;788:6:20;;;;:11;;800:5;808:15;822:1;808:11;:15;:::i;:::-;788:37;;-1:-1:-1;;;;;;788:37:20;;;;;;;-1:-1:-1;;;;;9123:32:21;;;788:37:20;;;9105:51:21;9172:18;;;9165:34;9078:18;;788:37:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:3;;;;;750:107;;;-1:-1:-1;927:6:20::1;::::0;944:5:::1;::::0;927:23:::1;::::0;-1:-1:-1;;;927:23:20;;-1:-1:-1;;;;;944:5:20;;::::1;927:23;::::0;::::1;4141:51:21::0;918:41:20::1;::::0;927:6;;;::::1;::::0;:16:::1;::::0;4114:18:21;;927:23:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;952:6;;918:8;:41::i;:::-;696:172:::0;872:92::o;1866:141:7:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;9105:51:21;;;-1:-1:-1;;;9172:18:21;;;9165:34;2196:43:0;;;;;;;;;9078:18:21;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;968:276:20:-;724:6;;:20;;;-1:-1:-1;;;724:20:20;;;;702:19;;-1:-1:-1;;;;;724:6:20;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:42;;755:6;750:107;771:6;;767:1;:10;750:107;;;788:6;;800:5;;-1:-1:-1;;;;;788:6:20;;;;:11;;800:5;808:15;822:1;808:11;:15;:::i;:::-;788:37;;-1:-1:-1;;;;;;788:37:20;;;;;;;-1:-1:-1;;;;;9123:32:21;;;788:37:20;;;9105:51:21;9172:18;;;9165:34;9078:18;;788:37:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:3;;;;;750:107;;;;1023:6:::1;1018:133;1039:6;;1035:1;:10;1018:133;;;1065:5;::::0;1056:15:::1;::::0;-1:-1:-1;;;1056:15:20;;-1:-1:-1;;;;;1065:5:20;;::::1;1056:15;::::0;::::1;4141:51:21::0;1056:8:20;;::::1;::::0;4114:18:21;;1056:15:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1079:6:20::1;::::0;1103:5:::1;::::0;1110::::1;::::0;1079:40:::1;::::0;-1:-1:-1;;;1079:40:20;;-1:-1:-1;;;;;1103:5:20;;::::1;1079:40;::::0;::::1;11889:34:21::0;1110:5:20;;::::1;11939:18:21::0;;;11932:43;11991:18;;;11984:34;;;1079:6:20;::::1;::::0;-1:-1:-1;1079:23:20::1;::::0;-1:-1:-1;11824:18:21;;1079:40:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1139:3;;;;;1018:133;;;-1:-1:-1::0;1165:6:20::1;::::0;1182:5:::1;::::0;1165:23:::1;::::0;-1:-1:-1;;;1165:23:20;;-1:-1:-1;;;;;1182:5:20;;::::1;1165:23;::::0;::::1;4141:51:21::0;1156:36:20::1;::::0;1165:6;;;::::1;::::0;:16:::1;::::0;4114:18:21;;1165:23:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:1;1156:8;:36::i;:::-;1207:6;::::0;1224:5:::1;::::0;1207:23:::1;::::0;-1:-1:-1;;;1207:23:20;;-1:-1:-1;;;;;1224:5:20;;::::1;1207:23;::::0;::::1;4141:51:21::0;1198:41:20::1;::::0;1207:6;;;::::1;::::0;:16:::1;::::0;4114:18:21;;1207:23:20::1;3995:203:21::0;2013:142:7;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;15385:125:5:-;15449:12;15483:20;15498:4;15483:14;:20::i;:::-;-1:-1:-1;15473:30:5;15385:125;-1:-1:-1;;15385:125:5:o;3622:277:0:-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;3712:44;;;;;12231:2:21;12213:21;;;12270:2;12250:18;;;12243:30;12309:34;12304:2;12289:18;;12282:62;-1:-1:-1;;;12375:2:21;12360:18;;12353:35;12420:3;12405:19;;12029:401;3712:44:0;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;:::-;;;;;;;;3876:6;:4;:6::i;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;18062:43;;;;;14017:2:21;13999:21;;;14056:2;14036:18;;;14029:30;14095:34;14090:2;14075:18;;14068:62;-1:-1:-1;;;14161:2:21;14146:18;;14139:34;14205:3;14190:19;;13815:400;18062:43:0;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;15312:2:21;15294:21;;;15351:2;15331:18;;;15324:30;15390:34;15385:2;15370:18;;15363:62;-1:-1:-1;;;15456:2:21;15441:18;;15434:32;15498:3;15483:19;;15110:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;15104:242:5:-;15174:12;15188:18;15266:4;15249:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15249:22:5;;;;;;;15239:33;;15249:22;15239:33;;;;-1:-1:-1;;;;;;15290:19:5;;;;;3959:25:21;;;15239:33:5;-1:-1:-1;15290:7:5;;;;3932:18:21;;15290:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15319:20;;-1:-1:-1;;;15319:20:5;;15283:26;;-1:-1:-1;15319:8:5;;;;:20;;15283:26;;15334:4;;15319:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15104:242;;;:::o;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;16743:51:21;;;-1:-1:-1;;;16810:18:21;;;16803:34;;;;2712:4:0;16853:18:21;;;16846:34;2489:11:0;;1671:64;2586:43;;16716:18:21;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:250:21:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:21;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:21;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:21:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:21:o;770:658::-;941:2;993:21;;;1063:13;;966:18;;;1085:22;;;912:4;;941:2;1164:15;;;;1138:2;1123:18;;;912:4;1207:195;1221:6;1218:1;1215:13;1207:195;;;1286:13;;-1:-1:-1;;;;;1282:39:21;1270:52;;1377:15;;;;1342:12;;;;1318:1;1236:9;1207:195;;;-1:-1:-1;1419:3:21;;770:658;-1:-1:-1;;;;;;770:658:21:o;1433:1567::-;1635:4;1664:2;1704;1693:9;1689:18;1734:2;1723:9;1716:21;1757:6;1792;1786:13;1823:6;1815;1808:22;1849:2;1839:12;;1882:2;1871:9;1867:18;1860:25;;1944:2;1934:6;1931:1;1927:14;1916:9;1912:30;1908:39;1982:2;1974:6;1970:15;2003:1;2024;2034:937;2050:6;2045:3;2042:15;2034:937;;;2119:22;;;-1:-1:-1;;2115:36:21;2103:49;;2175:13;;2262:9;;-1:-1:-1;;;;;2258:35:21;2243:51;;2333:11;;2327:18;2365:15;;;2358:27;;;2446:19;;2215:15;;;2478:24;;;2568:21;;;;2613:1;;2536:2;2524:15;;;2627:236;2643:8;2638:3;2635:17;2627:236;;;2724:15;;-1:-1:-1;;;;;;2720:42:21;2706:57;;2832:17;;;;2671:1;2662:11;;;;;2789:14;;;;2627:236;;;-1:-1:-1;2949:12:21;;;;2886:5;-1:-1:-1;;;2914:15:21;;;;2076:1;2067:11;2034:937;;;-1:-1:-1;2988:6:21;;1433:1567;-1:-1:-1;;;;;;;;;1433:1567:21:o;3005:803::-;3167:4;3196:2;3236;3225:9;3221:18;3266:2;3255:9;3248:21;3289:6;3324;3318:13;3355:6;3347;3340:22;3393:2;3382:9;3378:18;3371:25;;3455:2;3445:6;3442:1;3438:14;3427:9;3423:30;3419:39;3405:53;;3493:2;3485:6;3481:15;3514:1;3524:255;3538:6;3535:1;3532:13;3524:255;;;3631:2;3627:7;3615:9;3607:6;3603:22;3599:36;3594:3;3587:49;3659:40;3692:6;3683;3677:13;3659:40;:::i;:::-;3649:50;-1:-1:-1;3757:12:21;;;;3722:15;;;;3560:1;3553:9;3524:255;;;-1:-1:-1;3796:6:21;;3005:803;-1:-1:-1;;;;;;;3005:803:21:o;4619:380::-;4698:1;4694:12;;;;4741;;;4762:61;;4816:4;4808:6;4804:17;4794:27;;4762:61;4869:2;4861:6;4858:14;4838:18;4835:38;4832:161;;4915:10;4910:3;4906:20;4903:1;4896:31;4950:4;4947:1;4940:15;4978:4;4975:1;4968:15;4832:161;;4619:380;;;:::o;5004:127::-;5065:10;5060:3;5056:20;5053:1;5046:31;5096:4;5093:1;5086:15;5120:4;5117:1;5110:15;5262:545;5364:2;5359:3;5356:11;5353:448;;;5400:1;5425:5;5421:2;5414:17;5470:4;5466:2;5456:19;5540:2;5528:10;5524:19;5521:1;5517:27;5511:4;5507:38;5576:4;5564:10;5561:20;5558:47;;;-1:-1:-1;5599:4:21;5558:47;5654:2;5649:3;5645:12;5642:1;5638:20;5632:4;5628:31;5618:41;;5709:82;5727:2;5720:5;5717:13;5709:82;;;5772:17;;;5753:1;5742:13;5709:82;;;5713:3;;;5353:448;5262:545;;;:::o;5983:1352::-;6109:3;6103:10;6136:18;6128:6;6125:30;6122:56;;;6158:18;;:::i;:::-;6187:97;6277:6;6237:38;6269:4;6263:11;6237:38;:::i;:::-;6231:4;6187:97;:::i;:::-;6339:4;;6403:2;6392:14;;6420:1;6415:663;;;;7122:1;7139:6;7136:89;;;-1:-1:-1;7191:19:21;;;7185:26;7136:89;-1:-1:-1;;5940:1:21;5936:11;;;5932:24;5928:29;5918:40;5964:1;5960:11;;;5915:57;7238:81;;6385:944;;6415:663;5209:1;5202:14;;;5246:4;5233:18;;-1:-1:-1;;6451:20:21;;;6569:236;6583:7;6580:1;6577:14;6569:236;;;6672:19;;;6666:26;6651:42;;6764:27;;;;6732:1;6720:14;;;;6599:19;;6569:236;;;6573:3;6833:6;6824:7;6821:19;6818:201;;;6894:19;;;6888:26;-1:-1:-1;;6977:1:21;6973:14;;;6989:3;6969:24;6965:37;6961:42;6946:58;6931:74;;6818:201;-1:-1:-1;;;;;7065:1:21;7049:14;;;7045:22;7032:36;;-1:-1:-1;5983:1352:21:o;7340:772::-;7390:3;7431:5;7425:12;7460:36;7486:9;7460:36;:::i;:::-;7505:19;;;7543:4;7566:1;7583:18;;;7610:146;;;;7770:1;7765:341;;;;7576:530;;7610:146;-1:-1:-1;;7652:24:21;;7638:12;;;7631:46;7724:14;;7717:22;7714:1;7710:30;7701:40;;7697:49;;;-1:-1:-1;7610:146:21;;7765:341;7796:5;7793:1;7786:16;7843:2;7840:1;7830:16;7868:1;7882:174;7896:6;7893:1;7890:13;7882:174;;;7983:14;;7965:11;;;7961:20;;7954:44;8026:16;;;;7911:10;;7882:174;;;8080:11;;8076:20;;;-1:-1:-1;;7576:530:21;;;;;;7340:772;;;;:::o;8117:393::-;8308:2;8297:9;8290:21;8271:4;8334:53;8383:2;8372:9;8368:18;8360:6;8334:53;:::i;:::-;8435:9;8427:6;8423:22;8418:2;8407:9;8403:18;8396:50;8463:41;8497:6;8489;8463:41;:::i;:::-;8455:49;8117:393;-1:-1:-1;;;;;8117:393:21:o;8515:184::-;8585:6;8638:2;8626:9;8617:7;8613:23;8609:32;8606:52;;;8654:1;8651;8644:12;8606:52;-1:-1:-1;8677:16:21;;8515:184;-1:-1:-1;8515:184:21:o;8704:222::-;8769:9;;;8790:10;;;8787:133;;;8842:10;8837:3;8833:20;8830:1;8823:31;8877:4;8874:1;8867:15;8905:4;8902:1;8895:15;8787:133;8704:222;;;;:::o;9210:290::-;9280:6;9333:2;9321:9;9312:7;9308:23;9304:32;9301:52;;;9349:1;9346;9339:12;9301:52;9375:16;;-1:-1:-1;;;;;9420:31:21;;9410:42;;9400:70;;9466:1;9463;9456:12;9505:897;9585:6;9638:2;9626:9;9617:7;9613:23;9609:32;9606:52;;;9654:1;9651;9644:12;9606:52;9687:9;9681:16;9716:18;9757:2;9749:6;9746:14;9743:34;;;9773:1;9770;9763:12;9743:34;9811:6;9800:9;9796:22;9786:32;;9856:7;9849:4;9845:2;9841:13;9837:27;9827:55;;9878:1;9875;9868:12;9827:55;9907:2;9901:9;9929:2;9925;9922:10;9919:36;;;9935:18;;:::i;:::-;10010:2;10004:9;9978:2;10064:13;;-1:-1:-1;;10060:22:21;;;10084:2;10056:31;10052:40;10040:53;;;10108:18;;;10128:22;;;10105:46;10102:72;;;10154:18;;:::i;:::-;10194:10;10190:2;10183:22;10229:2;10221:6;10214:18;10269:7;10264:2;10259;10255;10251:11;10247:20;10244:33;10241:53;;;10290:1;10287;10280:12;10241:53;10303:68;10368:2;10363;10355:6;10351:15;10346:2;10342;10338:11;10303:68;:::i;:::-;10390:6;9505:897;-1:-1:-1;;;;;;;9505:897:21:o;10686:384::-;-1:-1:-1;;;;;;10871:33:21;;10859:46;;10928:13;;10841:3;;10950:74;10928:13;11013:1;11004:11;;10997:4;10985:17;;10950:74;:::i;:::-;11044:16;;;;11062:1;11040:24;;10686:384;-1:-1:-1;;;10686:384:21:o;11075:287::-;11204:3;11242:6;11236:13;11258:66;11317:6;11312:3;11305:4;11297:6;11293:17;11258:66;:::i;:::-;11340:16;;;;;11075:287;-1:-1:-1;;11075:287:21:o;11367:277::-;11434:6;11487:2;11475:9;11466:7;11462:23;11458:32;11455:52;;;11503:1;11500;11493:12;11455:52;11535:9;11529:16;11588:5;11581:13;11574:21;11567:5;11564:32;11554:60;;11610:1;11607;11600:12;12599:374;12829:2;12818:9;12811:21;12792:4;12849:49;12894:2;12883:9;12879:18;12512:2;12500:15;;-1:-1:-1;;;12540:4:21;12531:14;;12524:36;12585:2;12576:12;;12435:159;12849:49;-1:-1:-1;;;;;12934:32:21;;;;12929:2;12914:18;;;;12907:60;;;;-1:-1:-1;12841:57:21;12599:374::o;13142:::-;13372:2;13361:9;13354:21;13335:4;13392:49;13437:2;13426:9;13422:18;13055:2;13043:15;;-1:-1:-1;;;13083:4:21;13074:14;;13067:36;13128:2;13119:12;;12978:159;14220:440;14470:2;14459:9;14452:21;14433:4;14496:49;14541:2;14530:9;14526:18;12512:2;12500:15;;-1:-1:-1;;;12540:4:21;12531:14;;12524:36;12585:2;12576:12;;12435:159;14496:49;14593:9;14585:6;14581:22;14576:2;14565:9;14561:18;14554:50;14621:33;14647:6;14639;14621:33;:::i;:::-;14613:41;14220:440;-1:-1:-1;;;;14220:440:21:o;14665:::-;14915:2;14904:9;14897:21;14878:4;14941:49;14986:2;14975:9;14971:18;13055:2;13043:15;;-1:-1:-1;;;13083:4:21;13074:14;;13067:36;13128:2;13119:12;;12978:159;15513:348;15743:2;15732:9;15725:21;15706:4;15763:49;15808:2;15797:9;15793:18;12512:2;12500:15;;-1:-1:-1;;;12540:4:21;12531:14;;12524:36;12585:2;12576:12;;12435:159;15763:49;15755:57;;15848:6;15843:2;15832:9;15828:18;15821:34;15513:348;;;;:::o;15866:::-;16096:2;16085:9;16078:21;16059:4;16116:49;16161:2;16150:9;16146:18;13055:2;13043:15;;-1:-1:-1;;;13083:4:21;13074:14;;13067:36;13128:2;13119:12;;12978:159;16219:317;-1:-1:-1;;;;;16396:32:21;;16378:51;;16465:2;16460;16445:18;;16438:30;;;-1:-1:-1;;16485:45:21;;16511:18;;16503:6;16485:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "amount()": "aa8c217c",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "myBAYC()": "bd70d9f1",
    "name()": "06fdde03",
    "setUp()": "0a9254e4",
    "symbol()": "95d89b41",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testApprove()": "1aeb10a6",
    "testMint()": "9642ddaf",
    "testNameAndSymbol()": "6ac11701",
    "testTransfer()": "d591221f",
    "user1()": "ac1717b0",
    "user2()": "b9edb1af"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBAYC\",\"outputs\":[{\"internalType\":\"contract MyBAYC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/NFT.t.sol\":\"NFTTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ERC721A/=lib/ERC721A/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/MyBAYC.sol\":{\"keccak256\":\"0x5c3cda28f22168658c44eef7b4872fe8a17a7f1784654d72f8357b2e96bd101f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce251d68810da24de3fe5445a40626996416b1acbadd09ca19ff3a67189e70f\",\"dweb:/ipfs/QmeHDrJbREizdiuMm9sUpFcdfvbtRTKtcUeRJgRD4y1SyY\"]},\"test/NFT.t.sol\":{\"keccak256\":\"0x9a684071d8b3027a886ec3ac2c0eb38c9f0ea8258fd595ec248dc05b1c8e62e7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d847cbb6201612181d7111276c4619960ae2c94a1d24babcc3ccf331ed48a2e\",\"dweb:/ipfs/QmNXKzDooLu6i1oGKSnGLukjBxzrvnHQ5Jrs7jDThQvytQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "amount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "myBAYC",
          "outputs": [
            {
              "internalType": "contract MyBAYC",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNameAndSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ERC721A/=lib/ERC721A/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/NFT.t.sol": "NFTTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/MyBAYC.sol": {
        "keccak256": "0x5c3cda28f22168658c44eef7b4872fe8a17a7f1784654d72f8357b2e96bd101f",
        "urls": [
          "bzz-raw://0ce251d68810da24de3fe5445a40626996416b1acbadd09ca19ff3a67189e70f",
          "dweb:/ipfs/QmeHDrJbREizdiuMm9sUpFcdfvbtRTKtcUeRJgRD4y1SyY"
        ],
        "license": "MIT"
      },
      "test/NFT.t.sol": {
        "keccak256": "0x9a684071d8b3027a886ec3ac2c0eb38c9f0ea8258fd595ec248dc05b1c8e62e7",
        "urls": [
          "bzz-raw://5d847cbb6201612181d7111276c4619960ae2c94a1d24babcc3ccf331ed48a2e",
          "dweb:/ipfs/QmNXKzDooLu6i1oGKSnGLukjBxzrvnHQ5Jrs7jDThQvytQ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/NFT.t.sol",
    "id": 29851,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "MyBAYC": [
        29637
      ],
      "NFTTest": [
        29850
      ],
      "StdAssertions": [
        3818
      ],
      "StdChains": [
        4512
      ],
      "StdCheats": [
        6788
      ],
      "StdInvariant": [
        7078
      ],
      "StdStorage": [
        7828
      ],
      "StdStyle": [
        10472
      ],
      "StdUtils": [
        11299
      ],
      "Test": [
        11348
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12830
      ],
      "console": [
        20894
      ],
      "console2": [
        28990
      ],
      "stdError": [
        6854
      ],
      "stdJson": [
        7654
      ],
      "stdMath": [
        7796
      ],
      "stdStorage": [
        9261
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1428:20",
    "nodes": [
      {
        "id": 29639,
        "nodeType": "PragmaDirective",
        "src": "39:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 29640,
        "nodeType": "ImportDirective",
        "src": "65:28:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29851,
        "sourceUnit": 11349,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29641,
        "nodeType": "ImportDirective",
        "src": "94:31:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29851,
        "sourceUnit": 20895,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29643,
        "nodeType": "ImportDirective",
        "src": "126:43:20",
        "nodes": [],
        "absolutePath": "src/MyBAYC.sol",
        "file": "../src/MyBAYC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29851,
        "sourceUnit": 29638,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29642,
              "name": "MyBAYC",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29637,
              "src": "135:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29850,
        "nodeType": "ContractDefinition",
        "src": "171:1295:20",
        "nodes": [
          {
            "id": 29647,
            "nodeType": "VariableDeclaration",
            "src": "200:18:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "214:4:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29646,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "200:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29649,
            "nodeType": "VariableDeclaration",
            "src": "222:20:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "95d89b41",
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "236:6:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29648,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "222:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29652,
            "nodeType": "VariableDeclaration",
            "src": "246:20:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "bd70d9f1",
            "mutability": "mutable",
            "name": "myBAYC",
            "nameLocation": "260:6:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MyBAYC_$29637",
              "typeString": "contract MyBAYC"
            },
            "typeName": {
              "id": 29651,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29650,
                "name": "MyBAYC",
                "nameLocations": [
                  "246:6:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29637,
                "src": "246:6:20"
              },
              "referencedDeclaration": 29637,
              "src": "246:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyBAYC_$29637",
                "typeString": "contract MyBAYC"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29654,
            "nodeType": "VariableDeclaration",
            "src": "270:20:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac1717b0",
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "285:5:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29653,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29656,
            "nodeType": "VariableDeclaration",
            "src": "294:20:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9edb1af",
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "309:5:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29655,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29658,
            "nodeType": "VariableDeclaration",
            "src": "318:21:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "aa8c217c",
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "333:6:20",
            "scope": 29850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29657,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29695,
            "nodeType": "FunctionDefinition",
            "src": "344:205:20",
            "nodes": [],
            "body": {
              "id": 29694,
              "nodeType": "Block",
              "src": "368:181:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29661,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29658,
                      "src": "374:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 29662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "383:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "374:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29664,
                  "nodeType": "ExpressionStatement",
                  "src": "374:10:20"
                },
                {
                  "expression": {
                    "id": 29667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29665,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29647,
                      "src": "390:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4d7920426f7265642041706520596163687420436c7562",
                      "id": 29666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "397:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f418a117b1be496458de0c6b8f4202df61b4bfb6d45026cf510f0786e14c1f9f",
                        "typeString": "literal_string \"My Bored Ape Yacht Club\""
                      },
                      "value": "My Bored Ape Yacht Club"
                    },
                    "src": "390:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 29668,
                  "nodeType": "ExpressionStatement",
                  "src": "390:32:20"
                },
                {
                  "expression": {
                    "id": 29671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29669,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29649,
                      "src": "428:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "42415943",
                      "id": 29670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "437:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0eb8c384cfeceedc4535b505d996e433a89a9ac079baa55996b51af4af30cb17",
                        "typeString": "literal_string \"BAYC\""
                      },
                      "value": "BAYC"
                    },
                    "src": "428:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 29672,
                  "nodeType": "ExpressionStatement",
                  "src": "428:15:20"
                },
                {
                  "expression": {
                    "id": 29680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29673,
                      "name": "myBAYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29652,
                      "src": "449:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyBAYC_$29637",
                        "typeString": "contract MyBAYC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29677,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29647,
                          "src": "469:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 29678,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29649,
                          "src": "475:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 29676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "458:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MyBAYC_$29637_$",
                          "typeString": "function (string memory,string memory) returns (contract MyBAYC)"
                        },
                        "typeName": {
                          "id": 29675,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29674,
                            "name": "MyBAYC",
                            "nameLocations": [
                              "462:6:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29637,
                            "src": "462:6:20"
                          },
                          "referencedDeclaration": 29637,
                          "src": "462:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MyBAYC_$29637",
                            "typeString": "contract MyBAYC"
                          }
                        }
                      },
                      "id": 29679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "458:24:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyBAYC_$29637",
                        "typeString": "contract MyBAYC"
                      }
                    },
                    "src": "449:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyBAYC_$29637",
                      "typeString": "contract MyBAYC"
                    }
                  },
                  "id": 29681,
                  "nodeType": "ExpressionStatement",
                  "src": "449:33:20"
                },
                {
                  "expression": {
                    "id": 29686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29682,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29654,
                      "src": "488:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7573657231",
                          "id": 29684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "505:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                            "typeString": "literal_string \"user1\""
                          },
                          "value": "user1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                            "typeString": "literal_string \"user1\""
                          }
                        ],
                        "id": 29683,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5935,
                        "src": "496:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 29685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "496:17:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "488:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29687,
                  "nodeType": "ExpressionStatement",
                  "src": "488:25:20"
                },
                {
                  "expression": {
                    "id": 29692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29688,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29656,
                      "src": "519:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7573657232",
                          "id": 29690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "536:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                            "typeString": "literal_string \"user2\""
                          },
                          "value": "user2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                            "typeString": "literal_string \"user2\""
                          }
                        ],
                        "id": 29689,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5935,
                        "src": "527:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 29691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "527:17:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "519:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29693,
                  "nodeType": "ExpressionStatement",
                  "src": "519:25:20"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "353:5:20",
            "parameters": {
              "id": 29659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:2:20"
            },
            "returnParameters": {
              "id": 29660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:0:20"
            },
            "scope": 29850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29713,
            "nodeType": "FunctionDefinition",
            "src": "553:115:20",
            "nodes": [],
            "body": {
              "id": 29712,
              "nodeType": "Block",
              "src": "589:79:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29699,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29652,
                            "src": "604:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$29637",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 29700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "611:4:20",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29262,
                          "src": "604:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 29701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "604:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29702,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29647,
                        "src": "619:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 29698,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2012,
                      "src": "595:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 29703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29704,
                  "nodeType": "ExpressionStatement",
                  "src": "595:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29706,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29652,
                            "src": "639:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$29637",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 29707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "646:6:20",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29264,
                          "src": "639:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 29708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "639:15:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29709,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29649,
                        "src": "656:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 29705,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 2012,
                      "src": "630:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 29710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29711,
                  "nodeType": "ExpressionStatement",
                  "src": "630:33:20"
                }
              ]
            },
            "functionSelector": "6ac11701",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNameAndSymbol",
            "nameLocation": "562:17:20",
            "parameters": {
              "id": 29696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:20"
            },
            "returnParameters": {
              "id": 29697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:20"
            },
            "scope": 29850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29746,
            "nodeType": "ModifierDefinition",
            "src": "672:196:20",
            "nodes": [],
            "body": {
              "id": 29745,
              "nodeType": "Block",
              "src": "696:172:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29716,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "710:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 29745,
                      "src": "702:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "702:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29720,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29717,
                        "name": "myBAYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29652,
                        "src": "724:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyBAYC_$29637",
                          "typeString": "contract MyBAYC"
                        }
                      },
                      "id": 29718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "731:11:20",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29266,
                      "src": "724:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 29719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "702:42:20"
                },
                {
                  "body": {
                    "id": 29742,
                    "nodeType": "Block",
                    "src": "780:77:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29731,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29654,
                              "src": "800:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 29734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 29732,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29716,
                                    "src": "808:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 29733,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29722,
                                    "src": "822:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "808:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 29735,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "807:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 29728,
                              "name": "myBAYC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29652,
                              "src": "788:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MyBAYC_$29637",
                                "typeString": "contract MyBAYC"
                              }
                            },
                            "id": 29730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "795:4:20",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29583,
                            "src": "788:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 29736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "788:37:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29737,
                        "nodeType": "ExpressionStatement",
                        "src": "788:37:20"
                      },
                      {
                        "id": 29741,
                        "nodeType": "UncheckedBlock",
                        "src": "833:18:20",
                        "statements": [
                          {
                            "expression": {
                              "id": 29739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "845:3:20",
                              "subExpression": {
                                "id": 29738,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29722,
                                "src": "847:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 29740,
                            "nodeType": "ExpressionStatement",
                            "src": "845:3:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29725,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29722,
                      "src": "767:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 29726,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29658,
                      "src": "771:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "767:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29743,
                  "initializationExpression": {
                    "assignments": [
                      29722
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29722,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "760:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 29743,
                        "src": "755:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29721,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29724,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "764:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "755:10:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "750:107:20"
                },
                {
                  "id": 29744,
                  "nodeType": "PlaceholderStatement",
                  "src": "862:1:20"
                }
              ]
            },
            "name": "mintByAmount",
            "nameLocation": "681:12:20",
            "parameters": {
              "id": 29714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:2:20"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29760,
            "nodeType": "FunctionDefinition",
            "src": "872:92:20",
            "nodes": [],
            "body": {
              "id": 29759,
              "nodeType": "Block",
              "src": "912:52:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29754,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29654,
                            "src": "944:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29752,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29652,
                            "src": "927:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$29637",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 29753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "934:9:20",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29370,
                          "src": "927:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "927:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29756,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29658,
                        "src": "952:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29751,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "918:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29758,
                  "nodeType": "ExpressionStatement",
                  "src": "918:41:20"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29748,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "899:12:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29746,
                  "src": "899:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "899:12:20"
              }
            ],
            "name": "testMint",
            "nameLocation": "881:8:20",
            "parameters": {
              "id": 29747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:2:20"
            },
            "returnParameters": {
              "id": 29750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:20"
            },
            "scope": 29850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29809,
            "nodeType": "FunctionDefinition",
            "src": "968:276:20",
            "nodes": [],
            "body": {
              "id": 29808,
              "nodeType": "Block",
              "src": "1012:232:20",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 29790,
                    "nodeType": "Block",
                    "src": "1048:103:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29775,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29654,
                              "src": "1065:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29772,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2344,
                              "src": "1056:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$12830",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 29774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1059:5:20",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12443,
                            "src": "1056:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 29776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1056:15:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29777,
                        "nodeType": "ExpressionStatement",
                        "src": "1056:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29781,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29654,
                              "src": "1103:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 29782,
                              "name": "user2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29656,
                              "src": "1110:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 29783,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29766,
                              "src": "1117:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 29778,
                              "name": "myBAYC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29652,
                              "src": "1079:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MyBAYC_$29637",
                                "typeString": "contract MyBAYC"
                              }
                            },
                            "id": 29780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1086:16:20",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29570,
                            "src": "1079:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 29784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1079:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29785,
                        "nodeType": "ExpressionStatement",
                        "src": "1079:40:20"
                      },
                      {
                        "id": 29789,
                        "nodeType": "UncheckedBlock",
                        "src": "1127:18:20",
                        "statements": [
                          {
                            "expression": {
                              "id": 29787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "1139:3:20",
                              "subExpression": {
                                "id": 29786,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29766,
                                "src": "1141:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 29788,
                            "nodeType": "ExpressionStatement",
                            "src": "1139:3:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29769,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29766,
                      "src": "1035:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 29770,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29658,
                      "src": "1039:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1035:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29791,
                  "initializationExpression": {
                    "assignments": [
                      29766
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29766,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1028:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 29791,
                        "src": "1023:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29765,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1023:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29768,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1032:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1023:10:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "1018:133:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29795,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29654,
                            "src": "1182:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29793,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29652,
                            "src": "1165:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$29637",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 29794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1172:9:20",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29370,
                          "src": "1165:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 29797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 29792,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1156:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29799,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:36:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29803,
                            "name": "user2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29656,
                            "src": "1224:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29801,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29652,
                            "src": "1207:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$29637",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 29802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1214:9:20",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29370,
                          "src": "1207:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1207:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29805,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29658,
                        "src": "1232:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29800,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1198:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29807,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:41:20"
                }
              ]
            },
            "functionSelector": "d591221f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29762,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "999:12:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29746,
                  "src": "999:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "999:12:20"
              }
            ],
            "name": "testTransfer",
            "nameLocation": "977:12:20",
            "parameters": {
              "id": 29761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:2:20"
            },
            "returnParameters": {
              "id": 29764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:20"
            },
            "scope": 29850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29849,
            "nodeType": "FunctionDefinition",
            "src": "1248:216:20",
            "nodes": [],
            "body": {
              "id": 29848,
              "nodeType": "Block",
              "src": "1291:173:20",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 29846,
                    "nodeType": "Block",
                    "src": "1327:133:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29824,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29654,
                              "src": "1344:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29821,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2344,
                              "src": "1335:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$12830",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 29823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1338:5:20",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12443,
                            "src": "1335:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 29825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1335:15:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29826,
                        "nodeType": "ExpressionStatement",
                        "src": "1335:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29830,
                              "name": "user2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29656,
                              "src": "1373:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 29831,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29815,
                              "src": "1380:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 29827,
                              "name": "myBAYC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29652,
                              "src": "1358:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MyBAYC_$29637",
                                "typeString": "contract MyBAYC"
                              }
                            },
                            "id": 29829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1365:7:20",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29411,
                            "src": "1358:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 29832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:24:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29833,
                        "nodeType": "ExpressionStatement",
                        "src": "1358:24:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29837,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29815,
                                  "src": "1418:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 29835,
                                  "name": "myBAYC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29652,
                                  "src": "1399:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MyBAYC_$29637",
                                    "typeString": "contract MyBAYC"
                                  }
                                },
                                "id": 29836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1406:11:20",
                                "memberName": "getApproved",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29435,
                                "src": "1399:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 29838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1399:21:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 29839,
                              "name": "user2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29656,
                              "src": "1422:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29834,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2519,
                              2544,
                              2557,
                              2573,
                              2615,
                              2657,
                              2699,
                              2736,
                              2773,
                              2810,
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              2012,
                              2047
                            ],
                            "referencedDeclaration": 320,
                            "src": "1390:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 29840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:38:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29841,
                        "nodeType": "ExpressionStatement",
                        "src": "1390:38:20"
                      },
                      {
                        "id": 29845,
                        "nodeType": "UncheckedBlock",
                        "src": "1436:18:20",
                        "statements": [
                          {
                            "expression": {
                              "id": 29843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "1448:3:20",
                              "subExpression": {
                                "id": 29842,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29815,
                                "src": "1450:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 29844,
                            "nodeType": "ExpressionStatement",
                            "src": "1448:3:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29818,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29815,
                      "src": "1314:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 29819,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29658,
                      "src": "1318:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1314:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29847,
                  "initializationExpression": {
                    "assignments": [
                      29815
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29815,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1307:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 29847,
                        "src": "1302:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29814,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1302:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29817,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1311:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1302:10:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "1297:163:20"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29811,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "1278:12:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29746,
                  "src": "1278:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1278:12:20"
              }
            ],
            "name": "testApprove",
            "nameLocation": "1257:11:20",
            "parameters": {
              "id": 29810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:2:20"
            },
            "returnParameters": {
              "id": 29813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:20"
            },
            "scope": 29850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29644,
              "name": "Test",
              "nameLocations": [
                "191:4:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11348,
              "src": "191:4:20"
            },
            "id": 29645,
            "nodeType": "InheritanceSpecifier",
            "src": "191:4:20"
          }
        ],
        "canonicalName": "NFTTest",
        "contractDependencies": [
          29637
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29850,
          11348,
          2351,
          2348,
          11299,
          7078,
          6788,
          6109,
          4512,
          3818,
          2291
        ],
        "name": "NFTTest",
        "nameLocation": "180:7:20",
        "scope": 29851,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 20
}