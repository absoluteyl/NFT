{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myBAYC",
      "outputs": [
        {
          "internalType": "contract MyBAYC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNameAndSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFirstNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "testTransferNonFirstNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "171:1352:22:-:0;;;1572:26:2;;;1594:4;-1:-1:-1;;1572:26:2;;;;;;;;3161:44:5;;;;;;;;;;;171:1352:22;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200015d5760003560e01c806395d89b4111620000c7578063b9edb1af1162000086578063b9edb1af1462000295578063ba414fa614620002a9578063baf3118a14620002c4578063bd70d9f114620002ce578063e20c9f7114620002e2578063fa7626d414620002ec57600080fd5b806395d89b4114620002315780639642ddaf146200023b578063aa8c217c1462000245578063ac1717b0146200025e578063b5508aa9146200028b57600080fd5b80633e5e3c2311620001205780633e5e3c2314620001d75780633f7286f414620001e157806366d9a9a014620001eb5780636ac11701146200020457806385226c81146200020e578063916a17c6146200022757600080fd5b806306fdde0314620001625780630a9254e414620001845780631ed7831c146200019057806330bf149914620001a95780633ad3cd8c14620001c0575b600080fd5b6200016c620002fa565b6040516200017b9190620019e6565b60405180910390f35b6200018e62000390565b005b6200019a620004f7565b6040516200017b919062001a02565b6200018e620001ba36600462001a51565b6200055b565b6200018e620001d136600462001a51565b620007d1565b6200019a620009d3565b6200019a62000a35565b620001f562000a97565b6040516200017b919062001a6b565b6200018e62000b8a565b6200021862000d22565b6040516200017b919062001b22565b620001f562000dfc565b6200016c62000ee6565b6200018e62000ef5565b6200024f60205481565b6040519081526020016200017b565b601e5462000272906001600160a01b031681565b6040516001600160a01b0390911681526020016200017b565b6200021862000ffd565b601f5462000272906001600160a01b031681565b620002b3620010d7565b60405190151581526020016200017b565b6200018e6200120c565b601d5462000272906001600160a01b031681565b6200019a620013b0565b600054620002b39060ff1681565b601b8054620003099062001b88565b80601f0160208091040260200160405190810160405280929190818152602001828054620003379062001b88565b8015620003885780601f106200035c5761010080835404028352916020019162000388565b820191906000526020600020905b8154815290600101906020018083116200036a57829003601f168201915b505050505081565b60056020819055506040518060400160405280601781526020017f4d7920426f7265642041706520596163687420436c7562000000000000000000815250601b9081620003de919062001c2d565b506040805180820190915260048152634241594360e01b6020820152601c9062000409908262001c2d565b50601b601c6040516200041c9062001984565b6200042992919062001d7f565b604051809103906000f08015801562000446573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526005815264757365723160d81b60208201526200048e9062001412565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260058152643ab9b2b91960d91b6020820152620004d59062001412565b601f80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200055157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000532575b5050505050905090565b60005b602054811015620005df57601d54601e546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b158015620005ba57600080fd5b505af1158015620005cf573d6000803e3d6000fd5b505050508060010190506200055e565b50737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e56282158015906200060b575060205483105b6040518263ffffffff1660e01b81526004016200062c911515815260200190565b60006040518083038186803b1580156200064557600080fd5b505afa1580156200065a573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620006b857600080fd5b505af1158015620006cd573d6000803e3d6000fd5b5050601d54601e54601f54604051632142170760e11b81526001600160a01b039283166004820152908216602482015260448101869052911692506342842e0e9150606401600060405180830381600087803b1580156200072d57600080fd5b505af115801562000742573d6000803e3d6000fd5b5050601d546040516331a9108f60e11b815260048101859052620007ce93506001600160a01b039091169150636352211e906024015b602060405180830381865afa15801562000796573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bc919062001db1565b601f546001600160a01b031662001426565b50565b60005b6020548110156200085557601d54601e546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b1580156200083057600080fd5b505af115801562000845573d6000803e3d6000fd5b50505050806001019050620007d4565b50602054604051632631f2b160e11b81529082106004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b158015620008a657600080fd5b505afa158015620008bb573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200091957600080fd5b505af11580156200092e573d6000803e3d6000fd5b5050601d54601f5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529116925063095ea7b39150604401600060405180830381600087803b1580156200098357600080fd5b505af115801562000998573d6000803e3d6000fd5b5050601d5460405163020604bf60e21b815260048101859052620007ce93506001600160a01b03909116915063081812fc9060240162000778565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000551576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000532575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000551576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000532575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000b815760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b6857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b295790505b5050505050815250508152602001906001019062000abb565b50505050905090565b601d54604080516306fdde0360e01b8152905162000c9a926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000bd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c01919081019062001ddc565b601b805462000c109062001b88565b80601f016020809104026020016040519081016040528092919081815260200182805462000c3e9062001b88565b801562000c8f5780601f1062000c635761010080835404028352916020019162000c8f565b820191906000526020600020905b81548152906001019060200180831162000c7157829003601f168201915b505050505062001536565b601d54604080516395d89b4160e01b8152905162000d20926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000ce7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d11919081019062001ddc565b601c805462000c109062001b88565b565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000b8157838290600052602060002001805462000d689062001b88565b80601f016020809104026020016040519081016040528092919081815260200182805462000d969062001b88565b801562000de75780601f1062000dbb5761010080835404028352916020019162000de7565b820191906000526020600020905b81548152906001019060200180831162000dc957829003601f168201915b50505050508152602001906001019062000d46565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000b815760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000ecd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000e8e5790505b5050505050815250508152602001906001019062000e20565b601c8054620003099062001b88565b60005b60205481101562000f7957601d54601e546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b15801562000f5457600080fd5b505af115801562000f69573d6000803e3d6000fd5b5050505080600101905062000ef8565b50601d54601e546040516370a0823160e01b81526001600160a01b03918216600482015262000d209291909116906370a0823190602401602060405180830381865afa15801562000fce573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ff4919062001e95565b6020546200166d565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000b81578382906000526020600020018054620010439062001b88565b80601f0160208091040260200160405190810160405280929190818152602001828054620010719062001b88565b8015620010c25780601f106200109657610100808354040283529160200191620010c2565b820191906000526020600020905b815481529060010190602001808311620010a457829003601f168201915b50505050508152602001906001019062001021565b60008054610100900460ff1615620010f85750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620012075760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001189917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001eaf565b60408051601f1981840301815290829052620011a59162001ee2565b6000604051808303816000865af19150503d8060008114620011e4576040519150601f19603f3d011682016040523d82523d6000602084013e620011e9565b606091505b509150508080602001905181019062001203919062001f00565b9150505b919050565b60005b6020548110156200129057601d54601e546040516340c10f1960e01b81526001600160a01b039182166004820152602481018490529116906340c10f1990604401600060405180830381600087803b1580156200126b57600080fd5b505af115801562001280573d6000803e3d6000fd5b505050508060010190506200120f565b50601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620012eb57600080fd5b505af115801562001300573d6000803e3d6000fd5b5050601d54601e54601f54604051632142170760e11b81526001600160a01b039283166004820152908216602482015260006044820152911692506342842e0e9150606401600060405180830381600087803b1580156200136057600080fd5b505af115801562001375573d6000803e3d6000fd5b5050601d546040516331a9108f60e11b81526000600482015262000d2093506001600160a01b039091169150636352211e9060240162000778565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000551576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000532575050505050905090565b60006200141f8262001752565b5092915050565b806001600160a01b0316826001600160a01b03161462001532577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620014ae9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620014e7919062001f24565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001520919062001f69565b60405180910390a16200153262001871565b5050565b8060405160200162001549919062001ee2565b604051602081830303815290604052805190602001208260405160200162001572919062001ee2565b604051602081830303815290604052805190602001201462001532577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015fb9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162001634919062001f94565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162001520919062001fdb565b80821462001532577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016e09060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001719919062002006565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200152091906200203f565b6000808260405160200162001768919062001ee2565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620017d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017fa919062001db1565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906200183890859087906004016200206a565b600060405180830381600087803b1580156200185357600080fd5b505af115801562001868573d6000803e3d6000fd5b50505050915091565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620019735760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200190e929160200162001eaf565b60408051601f19818403018152908290526200192a9162001ee2565b6000604051808303816000865af19150503d806000811462001969576040519150601f19603f3d011682016040523d82523d6000602084013e6200196e565b606091505b505050505b6000805461ff001916610100179055565b610e03806200209183390190565b60005b83811015620019af57818101518382015260200162001995565b50506000910152565b60008151808452620019d281602086016020860162001992565b601f01601f19169290920160200192915050565b602081526000620019fb6020830184620019b8565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101562001a455783516001600160a01b03168352928401929184019160010162001a1e565b50909695505050505050565b60006020828403121562001a6457600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562001b1357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562001afd5783516001600160e01b0319168252928b019260019290920191908b019062001ad1565b50978a0197955050509187019160010162001a93565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562001b7b57603f1988860301845262001b68858351620019b8565b9450928501929085019060010162001b49565b5092979650505050505050565b600181811c9082168062001b9d57607f821691505b60208210810362001bbe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111562001c2857600081815260208120601f850160051c8101602086101562001c035750805b601f850160051c820191505b8181101562001c245782815560010162001c0f565b5050505b505050565b815167ffffffffffffffff81111562001c4a5762001c4a62001bc4565b62001c628162001c5b845462001b88565b8462001bda565b602080601f83116001811462001c9a576000841562001c815750858301515b600019600386901b1c1916600185901b17855562001c24565b600085815260208120601f198616915b8281101562001ccb5788860151825594840194600190910190840162001caa565b508582101562001cea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815462001d098162001b88565b80855260206001838116801562001d29576001811462001d445762001d74565b60ff1985168884015283151560051b88018301955062001d74565b866000528260002060005b8581101562001d6c5781548a820186015290830190840162001d4f565b890184019650505b505050505092915050565b60408152600062001d94604083018562001cfa565b828103602084015262001da8818562001cfa565b95945050505050565b60006020828403121562001dc457600080fd5b81516001600160a01b0381168114620019fb57600080fd5b60006020828403121562001def57600080fd5b815167ffffffffffffffff8082111562001e0857600080fd5b818401915084601f83011262001e1d57600080fd5b81518181111562001e325762001e3262001bc4565b604051601f8201601f19908116603f0116810190838211818310171562001e5d5762001e5d62001bc4565b8160405282815287602084870101111562001e7757600080fd5b62001e8a83602083016020880162001992565b979650505050505050565b60006020828403121562001ea857600080fd5b5051919050565b6001600160e01b031983168152815160009062001ed481600485016020870162001992565b919091016004019392505050565b6000825162001ef681846020870162001992565b9190910192915050565b60006020828403121562001f1357600080fd5b81518015158114620019fb57600080fd5b60408152600062001f4f60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001f4f60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062001fbf60408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262001fd38185620019b8565b949350505050565b60408152600062001fbf60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200203160408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200203160408301600a8152690808080808149a59da1d60b21b602082015260400190565b6001600160a01b038316815260406020820181905260009062001fd390830184620019b856fe60806040523480156200001157600080fd5b5060405162000e0338038062000e0383398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b0f80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461013657806342842e0e146101495780636352211e1461015c57806370a082311461016f57806395d89b4114610182578063e985e9c51461018a57600080fd5b806306fdde03146100ae578063081812fc146100cc578063095ea7b3146100f757806318160ddd1461010c57806323b872dd14610123575b600080fd5b6100b66101c8565b6040516100c391906108f6565b60405180910390f35b6100df6100da366004610944565b610256565b6040516001600160a01b0390911681526020016100c3565b61010a610105366004610974565b6102d1565b005b61011560025481565b6040519081526020016100c3565b61010a61013136600461099e565b6103b3565b61010a610144366004610974565b61056b565b61010a61015736600461099e565b610579565b6100df61016a366004610944565b610671565b61011561017d3660046109da565b6106d1565b6100b661073c565b6101b86101983660046109fc565b600660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100c3565b600080546101d590610a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610a2f565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b6000818152600360205260408120546001600160a01b03166102b55760405162461bcd60e51b81526020600482015260136024820152721d1bdad95b88191bd95cdb89dd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b6000818152600360205260409020546001600160a01b03163381148061031a57506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b6103575760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016102ac565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b0384811691161461040c5760405162461bcd60e51b815260206004820152600d60248201526c333937b690109e9037bbb732b960991b60448201526064016102ac565b6001600160a01b0382166104625760405162461bcd60e51b815260206004820152601860248201527f7472616e7366657220746f207a65726f2061646472657373000000000000000060448201526064016102ac565b61046d833383610749565b6104aa5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b60448201526064016102ac565b6001600160a01b03831660009081526004602052604081208054916104ce83610a7f565b90915550506001600160a01b03821660009081526004602052604081208054916104f783610a96565b9091555050600081815260036020908152604080832080546001600160a01b038088166001600160a01b031992831681179093556005909452828520805490911690559051849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61057582826107bc565b5050565b6105848383836103b3565b6001600160a01b0382163b158061062d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190610aaf565b6001600160e01b031916145b61066c5760405162461bcd60e51b815260206004820152601060248201526f1d5b9cd85999481c9958da5c1a595b9d60821b60448201526064016102ac565b505050565b6000818152600360205260409020546001600160a01b0316806106cc5760405162461bcd60e51b81526020600482015260136024820152721d1bdad95b88191bd95cdb89dd08195e1a5cdd606a1b60448201526064016102ac565b919050565b60006001600160a01b0382166107205760405162461bcd60e51b81526020600482015260146024820152736f776e6572203d207a65726f206164647265737360601b60448201526064016102ac565b506001600160a01b031660009081526004602052604090205490565b600180546101d590610a2f565b6000836001600160a01b0316836001600160a01b0316148061079057506001600160a01b0380851660009081526006602090815260408083209387168352929052205460ff165b806107b457506000828152600560205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b0382166108095760405162461bcd60e51b81526020600482015260146024820152736d696e7420746f207a65726f206164647265737360601b60448201526064016102ac565b6000818152600360205260409020546001600160a01b03161561085f5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481b5a5b9d195960921b60448201526064016102ac565b6001600160a01b038216600090815260046020526040812080549161088383610a96565b90915550506002805490600061089883610a96565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060208083528351808285015260005b8181101561092357858101830151858201604001528201610907565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561095657600080fd5b5035919050565b80356001600160a01b03811681146106cc57600080fd5b6000806040838503121561098757600080fd5b6109908361095d565b946020939093013593505050565b6000806000606084860312156109b357600080fd5b6109bc8461095d565b92506109ca6020850161095d565b9150604084013590509250925092565b6000602082840312156109ec57600080fd5b6109f58261095d565b9392505050565b60008060408385031215610a0f57600080fd5b610a188361095d565b9150610a266020840161095d565b90509250929050565b600181811c90821680610a4357607f821691505b602082108103610a6357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081610a8e57610a8e610a69565b506000190190565b600060018201610aa857610aa8610a69565b5060010190565b600060208284031215610ac157600080fd5b81516001600160e01b0319811681146109f557600080fdfea2646970667358221220c22bd5a31e962cd94379cc30730222f8dd18ca113bf58674e73f6ffba30ec63764736f6c63430008130033a2646970667358221220fe4a103506e1b23f99c402f9dc2feb63bbc5063d9884f754e7f09f645af5760d64736f6c63430008130033",
    "sourceMap": "171:1352:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;203:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;347:205;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;907:239:22:-;;;;;;:::i;:::-;;:::i;1318:203::-;;;;;;:::i;:::-;;:::i;2930:133:8:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;556:115:22:-;;;:::i;2301:140:8:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;225:20:22:-;;;:::i;811:92::-;;;:::i;321:21::-;;;;;;;;;4144:25:23;;;4132:2;4117:18;321:21:22;3998:177:23;273:20:22;;;;;-1:-1:-1;;;;;273:20:22;;;;;;-1:-1:-1;;;;;4344:32:23;;;4326:51;;4314:2;4299:18;273:20:22;4180:203:23;1866:141:8;;;:::i;297:20:22:-;;;;;-1:-1:-1;;;;;297:20:22;;;1819:584:2;;;:::i;:::-;;;4553:14:23;;4546:22;4528:41;;4516:2;4501:18;1819:584:2;4388:187:23;1150:164:22;;;:::i;249:20::-;;;;;-1:-1:-1;;;;;249:20:22;;;2013:142:8;;;:::i;1572:26:2:-;;;;;;;;;203:18:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;347:205::-;386:1;377:6;:10;;;;393:32;;;;;;;;;;;;;;;;;:4;:32;;;;;;:::i;:::-;-1:-1:-1;431:15:22;;;;;;;;;;;;-1:-1:-1;;;431:15:22;;;;:6;;:15;;:6;:15;:::i;:::-;;472:4;478:6;461:24;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:6:22;:33;;-1:-1:-1;;;;;;452:33:22;-1:-1:-1;;;;;452:33:22;;;;;;;;;;499:17;;;;;;;;;;;;-1:-1:-1;;;499:17:22;;;;;;:8;:17::i;:::-;491:5;:25;;-1:-1:-1;;;;;;491:25:22;-1:-1:-1;;;;;491:25:22;;;;;;;;;;530:17;;;;;;;;;;;;-1:-1:-1;;;530:17:22;;;;;;:8;:17::i;:::-;522:5;:25;;-1:-1:-1;;;;;;522:25:22;-1:-1:-1;;;;;522:25:22;;;;;;;;;;347:205::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:8;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;907:239:22:-;710:6;705:91;726:6;;722:1;:10;705:91;;;743:6;;755:5;;743:21;;-1:-1:-1;;;743:21:22;;-1:-1:-1;;;;;755:5:22;;;743:21;;;8874:51:23;8941:18;;;8934:34;;;743:6:22;;;:11;;8847:18:23;;743:21:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:3;;;;;705:91;;;-1:-1:-1;980:9:22;::::1;990:11:::0;;;;;:31:::1;;;1015:6;;1005:7;:16;990:31;980:42;;;;;;;;;;;;;4553:14:23::0;4546:22;4528:41;;4516:2;4501:18;;4388:187;980:42:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1037:5:22::1;::::0;1028:15:::1;::::0;-1:-1:-1;;;1028:15:22;;-1:-1:-1;;;;;1037:5:22;;::::1;1028:15;::::0;::::1;4326:51:23::0;1028:8:22;;-1:-1:-1;1028:8:22::1;::::0;-1:-1:-1;4299:18:23;;1028:15:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1049:6:22::1;::::0;1073:5:::1;::::0;1080::::1;::::0;1049:46:::1;::::0;-1:-1:-1;;;1049:46:22;;-1:-1:-1;;;;;1073:5:22;;::::1;1049:46;::::0;::::1;9219:34:23::0;1080:5:22;;::::1;9269:18:23::0;;;9262:43;9321:18;;;9314:34;;;1049:6:22;::::1;::::0;-1:-1:-1;1049:23:22::1;::::0;-1:-1:-1;9154:18:23;;1049:46:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1110:6:22::1;::::0;:23:::1;::::0;-1:-1:-1;;;1110:23:22;;::::1;::::0;::::1;4144:25:23::0;;;1101:40:22::1;::::0;-1:-1:-1;;;;;;1110:6:22;;::::1;::::0;-1:-1:-1;1110:14:22::1;::::0;4117:18:23;;1110:23:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1135:5;::::0;-1:-1:-1;;;;;1135:5:22::1;1101:8;:40::i;:::-;907:239:::0;:::o;1318:203::-;710:6;705:91;726:6;;722:1;:10;705:91;;;743:6;;755:5;;743:21;;-1:-1:-1;;;743:21:22;;-1:-1:-1;;;;;755:5:22;;;743:21;;;8874:51:23;8941:18;;;8934:34;;;743:6:22;;;:11;;8847:18:23;;743:21:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:3;;;;;705:91;;;-1:-1:-1;1402:6:22::1;::::0;1382:27:::1;::::0;-1:-1:-1;;;1382:27:22;;1392:16;;::::1;1382:27;::::0;::::1;4528:41:23::0;1382:9:22;;::::1;::::0;4501:18:23;;1382:27:22::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1424:5:22::1;::::0;1415:15:::1;::::0;-1:-1:-1;;;1415:15:22;;-1:-1:-1;;;;;1424:5:22;;::::1;1415:15;::::0;::::1;4326:51:23::0;1415:8:22;;-1:-1:-1;1415:8:22::1;::::0;-1:-1:-1;4299:18:23;;1415:15:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1436:6:22::1;::::0;1451:5:::1;::::0;1436:30:::1;::::0;-1:-1:-1;;;1436:30:22;;-1:-1:-1;;;;;1451:5:22;;::::1;1436:30;::::0;::::1;8874:51:23::0;8941:18;;;8934:34;;;1436:6:22;::::1;::::0;-1:-1:-1;1436:14:22::1;::::0;-1:-1:-1;8847:18:23;;1436:30:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1481:6:22::1;::::0;:27:::1;::::0;-1:-1:-1;;;1481:27:22;;::::1;::::0;::::1;4144:25:23::0;;;1472:44:22::1;::::0;-1:-1:-1;;;;;;1481:6:22;;::::1;::::0;-1:-1:-1;1481:18:22::1;::::0;4117::23;;1481:27:22::1;3998:177:23::0;2930:133:8;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:8;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:8;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;556:115:22:-;607:6;;:13;;;-1:-1:-1;;;607:13:22;;;;598:29;;-1:-1:-1;;;;;607:6:22;;:11;;:13;;;;;:6;;:13;;;;;;;:6;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;607:13:22;;;;;;;;;;;;:::i;:::-;622:4;598:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:29::i;:::-;642:6;;:15;;;-1:-1:-1;;;642:15:22;;;;633:33;;-1:-1:-1;;;;;642:6:22;;:13;;:15;;;;;:6;;:15;;;;;;;:6;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:15:22;;;;;;;;;;;;:::i;:::-;659:6;633:33;;;;;:::i;:::-;556:115::o;2301:140:8:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;225:20:22;;;;;;;:::i;811:92::-;710:6;705:91;726:6;;722:1;:10;705:91;;;743:6;;755:5;;743:21;;-1:-1:-1;;;743:21:22;;-1:-1:-1;;;;;755:5:22;;;743:21;;;8874:51:23;8941:18;;;8934:34;;;743:6:22;;;:11;;8847:18:23;;743:21:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:3;;;;;705:91;;;-1:-1:-1;866:6:22::1;::::0;883:5:::1;::::0;866:23:::1;::::0;-1:-1:-1;;;866:23:22;;-1:-1:-1;;;;;883:5:22;;::::1;866:23;::::0;::::1;4326:51:23::0;857:41:22::1;::::0;866:6;;;::::1;::::0;:16:::1;::::0;4299:18:23;;866:23:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:6;;857:8;:41::i;1866:141:8:-:0;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:2;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;8874:51:23;;;-1:-1:-1;;;8941:18:23;;;8934:34;2196:43:2;;;;;;;;;8847:18:23;;;2196:43:2;;;-1:-1:-1;;1671:64:2;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;1150:164:22:-;710:6;705:91;726:6;;722:1;:10;705:91;;;743:6;;755:5;;743:21;;-1:-1:-1;;;743:21:22;;-1:-1:-1;;;;;755:5:22;;;743:21;;;8874:51:23;8941:18;;;8934:34;;;743:6:22;;;:11;;8847:18:23;;743:21:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:3;;;;;705:91;;;-1:-1:-1;1217:5:22::1;::::0;1208:15:::1;::::0;-1:-1:-1;;;1208:15:22;;-1:-1:-1;;;;;1217:5:22;;::::1;1208:15;::::0;::::1;4326:51:23::0;1208:8:22;;::::1;::::0;4299:18:23;;1208:15:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1229:6:22::1;::::0;1253:5:::1;::::0;1260::::1;::::0;1229:40:::1;::::0;-1:-1:-1;;;1229:40:22;;-1:-1:-1;;;;;1253:5:22;;::::1;1229:40;::::0;::::1;9219:34:23::0;1260:5:22;;::::1;9269:18:23::0;;;9262:43;1229:6:22::1;9321:18:23::0;;;9314:34;1229:6:22;::::1;::::0;-1:-1:-1;1229:23:22::1;::::0;-1:-1:-1;9154:18:23;;1229:40:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1284:6:22::1;::::0;:17:::1;::::0;-1:-1:-1;;;1284:17:22;;:6:::1;:17;::::0;::::1;4144:25:23::0;1275:34:22::1;::::0;-1:-1:-1;;;;;;1284:6:22;;::::1;::::0;-1:-1:-1;1284:14:22::1;::::0;4117:18:23;;1284:17:22::1;3998:177:23::0;2013:142:8;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:8;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;15385:125:6:-;15449:12;15483:20;15498:4;15483:14;:20::i;:::-;-1:-1:-1;15473:30:6;15385:125;-1:-1:-1;;15385:125:6:o;3622:277:2:-;3690:1;-1:-1:-1;;;;;3685:6:2;:1;-1:-1:-1;;;;;3685:6:2;;3681:212;;3712:44;;;;;12767:2:23;12749:21;;;12806:2;12786:18;;;12779:30;12845:34;12840:2;12825:18;;12818:62;-1:-1:-1;;;12911:2:23;12896:18;;12889:35;12956:3;12941:19;;12565:401;3712:44:2;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;:::-;;;;;;;;3876:6;:4;:6::i;:::-;3622:277;;:::o;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;18062:43;;;;;14553:2:23;14535:21;;;14592:2;14572:18;;;14565:30;14631:34;14626:2;14611:18;;14604:62;-1:-1:-1;;;14697:2:23;14682:18;;14675:34;14741:3;14726:19;;14351:400;18062:43:2;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;15848:2:23;15830:21;;;15887:2;15867:18;;;15860:30;15926:34;15921:2;15906:18;;15899:62;-1:-1:-1;;;15992:2:23;15977:18;;15970:32;16034:3;16019:19;;15646:398;5293:41:2;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;15104:242:6:-;15174:12;15188:18;15266:4;15249:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15249:22:6;;;;;;;15239:33;;15249:22;15239:33;;;;-1:-1:-1;;;;;;15290:19:6;;;;;4144:25:23;;;15239:33:6;-1:-1:-1;15290:7:6;;;;4117:18:23;;15290:19:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15319:20;;-1:-1:-1;;;15319:20:6;;15283:26;;-1:-1:-1;15319:8:6;;;;:20;;15283:26;;15334:4;;15319:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15104:242;;;:::o;2409:432:2:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17279:51:23;;;-1:-1:-1;;;17346:18:23;;;17339:34;;;;2712:4:2;17389:18:23;;;17382:34;2489:11:2;;1671:64;2586:43;;17252:18:23;;2652:67:2;;;-1:-1:-1;;2652:67:2;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:2;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:2;2820:7;:14;;-1:-1:-1;;2820:14:2;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:250:23:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:23;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:23;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:23:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:23:o;770:658::-;941:2;993:21;;;1063:13;;966:18;;;1085:22;;;912:4;;941:2;1164:15;;;;1138:2;1123:18;;;912:4;1207:195;1221:6;1218:1;1215:13;1207:195;;;1286:13;;-1:-1:-1;;;;;1282:39:23;1270:52;;1377:15;;;;1342:12;;;;1318:1;1236:9;1207:195;;;-1:-1:-1;1419:3:23;;770:658;-1:-1:-1;;;;;;770:658:23:o;1433:180::-;1492:6;1545:2;1533:9;1524:7;1520:23;1516:32;1513:52;;;1561:1;1558;1551:12;1513:52;-1:-1:-1;1584:23:23;;1433:180;-1:-1:-1;1433:180:23:o;1618:1567::-;1820:4;1849:2;1889;1878:9;1874:18;1919:2;1908:9;1901:21;1942:6;1977;1971:13;2008:6;2000;1993:22;2034:2;2024:12;;2067:2;2056:9;2052:18;2045:25;;2129:2;2119:6;2116:1;2112:14;2101:9;2097:30;2093:39;2167:2;2159:6;2155:15;2188:1;2209;2219:937;2235:6;2230:3;2227:15;2219:937;;;2304:22;;;-1:-1:-1;;2300:36:23;2288:49;;2360:13;;2447:9;;-1:-1:-1;;;;;2443:35:23;2428:51;;2518:11;;2512:18;2550:15;;;2543:27;;;2631:19;;2400:15;;;2663:24;;;2753:21;;;;2798:1;;2721:2;2709:15;;;2812:236;2828:8;2823:3;2820:17;2812:236;;;2909:15;;-1:-1:-1;;;;;;2905:42:23;2891:57;;3017:17;;;;2856:1;2847:11;;;;;2974:14;;;;2812:236;;;-1:-1:-1;3134:12:23;;;;3071:5;-1:-1:-1;;;3099:15:23;;;;2261:1;2252:11;2219:937;;;-1:-1:-1;3173:6:23;;1618:1567;-1:-1:-1;;;;;;;;;1618:1567:23:o;3190:803::-;3352:4;3381:2;3421;3410:9;3406:18;3451:2;3440:9;3433:21;3474:6;3509;3503:13;3540:6;3532;3525:22;3578:2;3567:9;3563:18;3556:25;;3640:2;3630:6;3627:1;3623:14;3612:9;3608:30;3604:39;3590:53;;3678:2;3670:6;3666:15;3699:1;3709:255;3723:6;3720:1;3717:13;3709:255;;;3816:2;3812:7;3800:9;3792:6;3788:22;3784:36;3779:3;3772:49;3844:40;3877:6;3868;3862:13;3844:40;:::i;:::-;3834:50;-1:-1:-1;3942:12:23;;;;3907:15;;;;3745:1;3738:9;3709:255;;;-1:-1:-1;3981:6:23;;3190:803;-1:-1:-1;;;;;;;3190:803:23:o;4804:380::-;4883:1;4879:12;;;;4926;;;4947:61;;5001:4;4993:6;4989:17;4979:27;;4947:61;5054:2;5046:6;5043:14;5023:18;5020:38;5017:161;;5100:10;5095:3;5091:20;5088:1;5081:31;5135:4;5132:1;5125:15;5163:4;5160:1;5153:15;5017:161;;4804:380;;;:::o;5189:127::-;5250:10;5245:3;5241:20;5238:1;5231:31;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5447:545;5549:2;5544:3;5541:11;5538:448;;;5585:1;5610:5;5606:2;5599:17;5655:4;5651:2;5641:19;5725:2;5713:10;5709:19;5706:1;5702:27;5696:4;5692:38;5761:4;5749:10;5746:20;5743:47;;;-1:-1:-1;5784:4:23;5743:47;5839:2;5834:3;5830:12;5827:1;5823:20;5817:4;5813:31;5803:41;;5894:82;5912:2;5905:5;5902:13;5894:82;;;5957:17;;;5938:1;5927:13;5894:82;;;5898:3;;;5538:448;5447:545;;;:::o;6168:1352::-;6294:3;6288:10;6321:18;6313:6;6310:30;6307:56;;;6343:18;;:::i;:::-;6372:97;6462:6;6422:38;6454:4;6448:11;6422:38;:::i;:::-;6416:4;6372:97;:::i;:::-;6524:4;;6588:2;6577:14;;6605:1;6600:663;;;;7307:1;7324:6;7321:89;;;-1:-1:-1;7376:19:23;;;7370:26;7321:89;-1:-1:-1;;6125:1:23;6121:11;;;6117:24;6113:29;6103:40;6149:1;6145:11;;;6100:57;7423:81;;6570:944;;6600:663;5394:1;5387:14;;;5431:4;5418:18;;-1:-1:-1;;6636:20:23;;;6754:236;6768:7;6765:1;6762:14;6754:236;;;6857:19;;;6851:26;6836:42;;6949:27;;;;6917:1;6905:14;;;;6784:19;;6754:236;;;6758:3;7018:6;7009:7;7006:19;7003:201;;;7079:19;;;7073:26;-1:-1:-1;;7162:1:23;7158:14;;;7174:3;7154:24;7150:37;7146:42;7131:58;7116:74;;7003:201;-1:-1:-1;;;;;7250:1:23;7234:14;;;7230:22;7217:36;;-1:-1:-1;6168:1352:23:o;7525:772::-;7575:3;7616:5;7610:12;7645:36;7671:9;7645:36;:::i;:::-;7690:19;;;7728:4;7751:1;7768:18;;;7795:146;;;;7955:1;7950:341;;;;7761:530;;7795:146;-1:-1:-1;;7837:24:23;;7823:12;;;7816:46;7909:14;;7902:22;7899:1;7895:30;7886:40;;7882:49;;;-1:-1:-1;7795:146:23;;7950:341;7981:5;7978:1;7971:16;8028:2;8025:1;8015:16;8053:1;8067:174;8081:6;8078:1;8075:13;8067:174;;;8168:14;;8150:11;;;8146:20;;8139:44;8211:16;;;;8096:10;;8067:174;;;8265:11;;8261:20;;;-1:-1:-1;;7761:530:23;;;;;;7525:772;;;;:::o;8302:393::-;8493:2;8482:9;8475:21;8456:4;8519:53;8568:2;8557:9;8553:18;8545:6;8519:53;:::i;:::-;8620:9;8612:6;8608:22;8603:2;8592:9;8588:18;8581:50;8648:41;8682:6;8674;8648:41;:::i;:::-;8640:49;8302:393;-1:-1:-1;;;;;8302:393:23:o;9359:290::-;9429:6;9482:2;9470:9;9461:7;9457:23;9453:32;9450:52;;;9498:1;9495;9488:12;9450:52;9524:16;;-1:-1:-1;;;;;9569:31:23;;9559:42;;9549:70;;9615:1;9612;9605:12;9654:897;9734:6;9787:2;9775:9;9766:7;9762:23;9758:32;9755:52;;;9803:1;9800;9793:12;9755:52;9836:9;9830:16;9865:18;9906:2;9898:6;9895:14;9892:34;;;9922:1;9919;9912:12;9892:34;9960:6;9949:9;9945:22;9935:32;;10005:7;9998:4;9994:2;9990:13;9986:27;9976:55;;10027:1;10024;10017:12;9976:55;10056:2;10050:9;10078:2;10074;10071:10;10068:36;;;10084:18;;:::i;:::-;10159:2;10153:9;10127:2;10213:13;;-1:-1:-1;;10209:22:23;;;10233:2;10205:31;10201:40;10189:53;;;10257:18;;;10277:22;;;10254:46;10251:72;;;10303:18;;:::i;:::-;10343:10;10339:2;10332:22;10378:2;10370:6;10363:18;10418:7;10413:2;10408;10404;10400:11;10396:20;10393:33;10390:53;;;10439:1;10436;10429:12;10390:53;10452:68;10517:2;10512;10504:6;10500:15;10495:2;10491;10487:11;10452:68;:::i;:::-;10539:6;9654:897;-1:-1:-1;;;;;;;9654:897:23:o;10556:184::-;10626:6;10679:2;10667:9;10658:7;10654:23;10650:32;10647:52;;;10695:1;10692;10685:12;10647:52;-1:-1:-1;10718:16:23;;10556:184;-1:-1:-1;10556:184:23:o;11024:384::-;-1:-1:-1;;;;;;11209:33:23;;11197:46;;11266:13;;11179:3;;11288:74;11266:13;11351:1;11342:11;;11335:4;11323:17;;11288:74;:::i;:::-;11382:16;;;;11400:1;11378:24;;11024:384;-1:-1:-1;;;11024:384:23:o;11413:287::-;11542:3;11580:6;11574:13;11596:66;11655:6;11650:3;11643:4;11635:6;11631:17;11596:66;:::i;:::-;11678:16;;;;;11413:287;-1:-1:-1;;11413:287:23:o;11705:277::-;11772:6;11825:2;11813:9;11804:7;11800:23;11796:32;11793:52;;;11841:1;11838;11831:12;11793:52;11873:9;11867:16;11926:5;11919:13;11912:21;11905:5;11902:32;11892:60;;11948:1;11945;11938:12;13135:374;13365:2;13354:9;13347:21;13328:4;13385:49;13430:2;13419:9;13415:18;13048:2;13036:15;;-1:-1:-1;;;13076:4:23;13067:14;;13060:36;13121:2;13112:12;;12971:159;13385:49;-1:-1:-1;;;;;13470:32:23;;;;13465:2;13450:18;;;;13443:60;;;;-1:-1:-1;13377:57:23;13135:374::o;13678:::-;13908:2;13897:9;13890:21;13871:4;13928:49;13973:2;13962:9;13958:18;13591:2;13579:15;;-1:-1:-1;;;13619:4:23;13610:14;;13603:36;13664:2;13655:12;;13514:159;14756:440;15006:2;14995:9;14988:21;14969:4;15032:49;15077:2;15066:9;15062:18;13048:2;13036:15;;-1:-1:-1;;;13076:4:23;13067:14;;13060:36;13121:2;13112:12;;12971:159;15032:49;15129:9;15121:6;15117:22;15112:2;15101:9;15097:18;15090:50;15157:33;15183:6;15175;15157:33;:::i;:::-;15149:41;14756:440;-1:-1:-1;;;;14756:440:23:o;15201:::-;15451:2;15440:9;15433:21;15414:4;15477:49;15522:2;15511:9;15507:18;13591:2;13579:15;;-1:-1:-1;;;13619:4:23;13610:14;;13603:36;13664:2;13655:12;;13514:159;16049:348;16279:2;16268:9;16261:21;16242:4;16299:49;16344:2;16333:9;16329:18;13048:2;13036:15;;-1:-1:-1;;;13076:4:23;13067:14;;13060:36;13121:2;13112:12;;12971:159;16299:49;16291:57;;16384:6;16379:2;16368:9;16364:18;16357:34;16049:348;;;;:::o;16402:::-;16632:2;16621:9;16614:21;16595:4;16652:49;16697:2;16686:9;16682:18;13591:2;13579:15;;-1:-1:-1;;;13619:4:23;13610:14;;13603:36;13664:2;13655:12;;13514:159;16755:317;-1:-1:-1;;;;;16932:32:23;;16914:51;;17001:2;16996;16981:18;;16974:30;;;-1:-1:-1;;17021:45:23;;17047:18;;17039:6;17021:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "amount()": "aa8c217c",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "myBAYC()": "bd70d9f1",
    "name()": "06fdde03",
    "setUp()": "0a9254e4",
    "symbol()": "95d89b41",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testApprove(uint256)": "3ad3cd8c",
    "testMint()": "9642ddaf",
    "testNameAndSymbol()": "6ac11701",
    "testTransferFirstNFT()": "baf3118a",
    "testTransferNonFirstNFT(uint256)": "30bf1499",
    "user1()": "ac1717b0",
    "user2()": "b9edb1af"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBAYC\",\"outputs\":[{\"internalType\":\"contract MyBAYC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFirstNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"testTransferNonFirstNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MyBAYC.t.sol\":\"MyBaYCTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ERC721A/=lib/ERC721A/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/MyBAYC.sol\":{\"keccak256\":\"0x8d8a1348f264e3f893ba8f56d65910944796f58f9a1b5330787e132ca40c0627\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c6a7ebdbdf8a899f764a095177d58ad31cde463f1aabc97a9655e3788aa792\",\"dweb:/ipfs/QmPbxrA3Z6WUvz51EcvoJ4oQc6B87XPbfXX6kAwXMCy2Ci\"]},\"test/MyBAYC.t.sol\":{\"keccak256\":\"0xc0a81141c1304753950ef10f745936416377698b7f2d48d9e6d516d6750d1825\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5bccab06f969a308cf56d76f6b8f97aa62bf33fc2268a371820f5091a2435124\",\"dweb:/ipfs/QmSU9wGJX24iL8UJs8y2aQRMDFakooC51oatGBuX7UcBxB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "amount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "myBAYC",
          "outputs": [
            {
              "internalType": "contract MyBAYC",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNameAndSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFirstNFT"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferNonFirstNFT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ERC721A/=lib/ERC721A/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MyBAYC.t.sol": "MyBaYCTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/MyBAYC.sol": {
        "keccak256": "0x8d8a1348f264e3f893ba8f56d65910944796f58f9a1b5330787e132ca40c0627",
        "urls": [
          "bzz-raw://d6c6a7ebdbdf8a899f764a095177d58ad31cde463f1aabc97a9655e3788aa792",
          "dweb:/ipfs/QmPbxrA3Z6WUvz51EcvoJ4oQc6B87XPbfXX6kAwXMCy2Ci"
        ],
        "license": "MIT"
      },
      "test/MyBAYC.t.sol": {
        "keccak256": "0xc0a81141c1304753950ef10f745936416377698b7f2d48d9e6d516d6750d1825",
        "urls": [
          "bzz-raw://5bccab06f969a308cf56d76f6b8f97aa62bf33fc2268a371820f5091a2435124",
          "dweb:/ipfs/QmSU9wGJX24iL8UJs8y2aQRMDFakooC51oatGBuX7UcBxB"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MyBAYC.t.sol",
    "id": 31885,
    "exportedSymbols": {
      "DSTest": [
        4120
      ],
      "MyBAYC": [
        31444
      ],
      "MyBaYCTest": [
        31884
      ],
      "StdAssertions": [
        5610
      ],
      "StdChains": [
        6304
      ],
      "StdCheats": [
        8580
      ],
      "StdInvariant": [
        8870
      ],
      "StdStorage": [
        9620
      ],
      "StdStyle": [
        12264
      ],
      "StdUtils": [
        13091
      ],
      "Test": [
        13140
      ],
      "TestBase": [
        4180
      ],
      "Vm": [
        14622
      ],
      "console": [
        22686
      ],
      "console2": [
        30782
      ],
      "stdError": [
        8646
      ],
      "stdJson": [
        9446
      ],
      "stdMath": [
        9588
      ],
      "stdStorage": [
        11053
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1485:22",
    "nodes": [
      {
        "id": 31664,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 31665,
        "nodeType": "ImportDirective",
        "src": "65:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31885,
        "sourceUnit": 13141,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31666,
        "nodeType": "ImportDirective",
        "src": "94:31:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31885,
        "sourceUnit": 22687,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31668,
        "nodeType": "ImportDirective",
        "src": "126:43:22",
        "nodes": [],
        "absolutePath": "src/MyBAYC.sol",
        "file": "../src/MyBAYC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31885,
        "sourceUnit": 31445,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31667,
              "name": "MyBAYC",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31444,
              "src": "135:6:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31884,
        "nodeType": "ContractDefinition",
        "src": "171:1352:22",
        "nodes": [
          {
            "id": 31672,
            "nodeType": "VariableDeclaration",
            "src": "203:18:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "217:4:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31671,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "203:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31674,
            "nodeType": "VariableDeclaration",
            "src": "225:20:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "95d89b41",
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "239:6:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31673,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "225:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31677,
            "nodeType": "VariableDeclaration",
            "src": "249:20:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "bd70d9f1",
            "mutability": "mutable",
            "name": "myBAYC",
            "nameLocation": "263:6:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MyBAYC_$31444",
              "typeString": "contract MyBAYC"
            },
            "typeName": {
              "id": 31676,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31675,
                "name": "MyBAYC",
                "nameLocations": [
                  "249:6:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31444,
                "src": "249:6:22"
              },
              "referencedDeclaration": 31444,
              "src": "249:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyBAYC_$31444",
                "typeString": "contract MyBAYC"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31679,
            "nodeType": "VariableDeclaration",
            "src": "273:20:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac1717b0",
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "288:5:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31678,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31681,
            "nodeType": "VariableDeclaration",
            "src": "297:20:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9edb1af",
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "312:5:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31680,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31683,
            "nodeType": "VariableDeclaration",
            "src": "321:21:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "aa8c217c",
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "336:6:22",
            "scope": 31884,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31682,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31720,
            "nodeType": "FunctionDefinition",
            "src": "347:205:22",
            "nodes": [],
            "body": {
              "id": 31719,
              "nodeType": "Block",
              "src": "371:181:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31686,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31683,
                      "src": "377:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 31687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "386:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "377:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31689,
                  "nodeType": "ExpressionStatement",
                  "src": "377:10:22"
                },
                {
                  "expression": {
                    "id": 31692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31690,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31672,
                      "src": "393:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4d7920426f7265642041706520596163687420436c7562",
                      "id": 31691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "400:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f418a117b1be496458de0c6b8f4202df61b4bfb6d45026cf510f0786e14c1f9f",
                        "typeString": "literal_string \"My Bored Ape Yacht Club\""
                      },
                      "value": "My Bored Ape Yacht Club"
                    },
                    "src": "393:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31693,
                  "nodeType": "ExpressionStatement",
                  "src": "393:32:22"
                },
                {
                  "expression": {
                    "id": 31696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31694,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31674,
                      "src": "431:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "42415943",
                      "id": 31695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "440:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0eb8c384cfeceedc4535b505d996e433a89a9ac079baa55996b51af4af30cb17",
                        "typeString": "literal_string \"BAYC\""
                      },
                      "value": "BAYC"
                    },
                    "src": "431:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31697,
                  "nodeType": "ExpressionStatement",
                  "src": "431:15:22"
                },
                {
                  "expression": {
                    "id": 31705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31698,
                      "name": "myBAYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31677,
                      "src": "452:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyBAYC_$31444",
                        "typeString": "contract MyBAYC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31702,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31672,
                          "src": "472:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 31703,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31674,
                          "src": "478:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 31701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "461:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MyBAYC_$31444_$",
                          "typeString": "function (string memory,string memory) returns (contract MyBAYC)"
                        },
                        "typeName": {
                          "id": 31700,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31699,
                            "name": "MyBAYC",
                            "nameLocations": [
                              "465:6:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31444,
                            "src": "465:6:22"
                          },
                          "referencedDeclaration": 31444,
                          "src": "465:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MyBAYC_$31444",
                            "typeString": "contract MyBAYC"
                          }
                        }
                      },
                      "id": 31704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "461:24:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyBAYC_$31444",
                        "typeString": "contract MyBAYC"
                      }
                    },
                    "src": "452:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyBAYC_$31444",
                      "typeString": "contract MyBAYC"
                    }
                  },
                  "id": 31706,
                  "nodeType": "ExpressionStatement",
                  "src": "452:33:22"
                },
                {
                  "expression": {
                    "id": 31711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31707,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31679,
                      "src": "491:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7573657231",
                          "id": 31709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "508:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                            "typeString": "literal_string \"user1\""
                          },
                          "value": "user1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                            "typeString": "literal_string \"user1\""
                          }
                        ],
                        "id": 31708,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7727,
                        "src": "499:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 31710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "499:17:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "491:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31712,
                  "nodeType": "ExpressionStatement",
                  "src": "491:25:22"
                },
                {
                  "expression": {
                    "id": 31717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31713,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31681,
                      "src": "522:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7573657232",
                          "id": 31715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "539:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                            "typeString": "literal_string \"user2\""
                          },
                          "value": "user2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                            "typeString": "literal_string \"user2\""
                          }
                        ],
                        "id": 31714,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7727,
                        "src": "530:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 31716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "530:17:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "522:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31718,
                  "nodeType": "ExpressionStatement",
                  "src": "522:25:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "356:5:22",
            "parameters": {
              "id": 31684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:2:22"
            },
            "returnParameters": {
              "id": 31685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31738,
            "nodeType": "FunctionDefinition",
            "src": "556:115:22",
            "nodes": [],
            "body": {
              "id": 31737,
              "nodeType": "Block",
              "src": "592:79:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31724,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "607:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "614:4:22",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31069,
                          "src": "607:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 31726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "607:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 31727,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31672,
                        "src": "622:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 31723,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 3841,
                      "src": "598:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 31728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31729,
                  "nodeType": "ExpressionStatement",
                  "src": "598:29:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31731,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "642:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "649:6:22",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31071,
                          "src": "642:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 31733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "642:15:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 31734,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31674,
                        "src": "659:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 31730,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 3841,
                      "src": "633:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 31735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31736,
                  "nodeType": "ExpressionStatement",
                  "src": "633:33:22"
                }
              ]
            },
            "functionSelector": "6ac11701",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNameAndSymbol",
            "nameLocation": "565:17:22",
            "parameters": {
              "id": 31721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:2:22"
            },
            "returnParameters": {
              "id": 31722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31762,
            "nodeType": "ModifierDefinition",
            "src": "675:132:22",
            "nodes": [],
            "body": {
              "id": 31761,
              "nodeType": "Block",
              "src": "699:108:22",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 31758,
                    "nodeType": "Block",
                    "src": "735:61:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31750,
                              "name": "user1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31679,
                              "src": "755:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 31751,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31741,
                              "src": "762:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31747,
                              "name": "myBAYC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31677,
                              "src": "743:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MyBAYC_$31444",
                                "typeString": "contract MyBAYC"
                              }
                            },
                            "id": 31749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "750:4:22",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31390,
                            "src": "743:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 31752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "743:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31753,
                        "nodeType": "ExpressionStatement",
                        "src": "743:21:22"
                      },
                      {
                        "id": 31757,
                        "nodeType": "UncheckedBlock",
                        "src": "772:18:22",
                        "statements": [
                          {
                            "expression": {
                              "id": 31755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "784:3:22",
                              "subExpression": {
                                "id": 31754,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31741,
                                "src": "786:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 31756,
                            "nodeType": "ExpressionStatement",
                            "src": "784:3:22"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31744,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31741,
                      "src": "722:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 31745,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31683,
                      "src": "726:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "722:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31759,
                  "initializationExpression": {
                    "assignments": [
                      31741
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 31741,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "715:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 31759,
                        "src": "710:6:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31740,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "710:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 31743,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 31742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "719:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "710:10:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "705:91:22"
                },
                {
                  "id": 31760,
                  "nodeType": "PlaceholderStatement",
                  "src": "801:1:22"
                }
              ]
            },
            "name": "mintByAmount",
            "nameLocation": "684:12:22",
            "parameters": {
              "id": 31739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:2:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 31776,
            "nodeType": "FunctionDefinition",
            "src": "811:92:22",
            "nodes": [],
            "body": {
              "id": 31775,
              "nodeType": "Block",
              "src": "851:52:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31770,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31679,
                            "src": "883:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 31768,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "866:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "873:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31177,
                          "src": "866:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "866:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31772,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31683,
                        "src": "891:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31767,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 2343,
                      "src": "857:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31774,
                  "nodeType": "ExpressionStatement",
                  "src": "857:41:22"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31764,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "838:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31762,
                  "src": "838:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "838:12:22"
              }
            ],
            "name": "testMint",
            "nameLocation": "820:8:22",
            "parameters": {
              "id": 31763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:2:22"
            },
            "returnParameters": {
              "id": 31766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31818,
            "nodeType": "FunctionDefinition",
            "src": "907:239:22",
            "nodes": [],
            "body": {
              "id": 31817,
              "nodeType": "Block",
              "src": "974:172:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 31792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31786,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31778,
                            "src": "990:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 31787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1000:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "990:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31789,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31778,
                            "src": "1005:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 31790,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31683,
                            "src": "1015:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1005:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "990:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31783,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "980:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14622",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "983:6:22",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14163,
                      "src": "980:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 31793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31794,
                  "nodeType": "ExpressionStatement",
                  "src": "980:42:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31798,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31679,
                        "src": "1037:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31795,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "1028:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14622",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1031:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14235,
                      "src": "1028:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31800,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:15:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31804,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31679,
                        "src": "1073:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31805,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1080:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31806,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31778,
                        "src": "1087:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31801,
                        "name": "myBAYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31677,
                        "src": "1049:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyBAYC_$31444",
                          "typeString": "contract MyBAYC"
                        }
                      },
                      "id": 31803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1056:16:22",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31377,
                      "src": "1049:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31808,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:46:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31812,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31778,
                            "src": "1125:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31810,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "1110:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1117:7:22",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31155,
                          "src": "1110:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1110:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31814,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1135:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31809,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 2149,
                      "src": "1101:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:40:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31816,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:40:22"
                }
              ]
            },
            "functionSelector": "30bf1499",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31781,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31780,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "961:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31762,
                  "src": "961:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "961:12:22"
              }
            ],
            "name": "testTransferNonFirstNFT",
            "nameLocation": "916:23:22",
            "parameters": {
              "id": 31779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31778,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "945:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 31818,
                  "src": "940:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31777,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:14:22"
            },
            "returnParameters": {
              "id": 31782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31846,
            "nodeType": "FunctionDefinition",
            "src": "1150:164:22",
            "nodes": [],
            "body": {
              "id": 31845,
              "nodeType": "Block",
              "src": "1202:112:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31826,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31679,
                        "src": "1217:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31823,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "1208:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14622",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1211:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14235,
                      "src": "1208:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31828,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:15:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31832,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31679,
                        "src": "1253:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31833,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1260:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1267:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31829,
                        "name": "myBAYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31677,
                        "src": "1229:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyBAYC_$31444",
                          "typeString": "contract MyBAYC"
                        }
                      },
                      "id": 31831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1236:16:22",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31377,
                      "src": "1229:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:40:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31836,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:40:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1299:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 31838,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "1284:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1291:7:22",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31155,
                          "src": "1284:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31842,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1303:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31837,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 2149,
                      "src": "1275:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31844,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:34:22"
                }
              ]
            },
            "functionSelector": "baf3118a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31820,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "1189:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31762,
                  "src": "1189:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1189:12:22"
              }
            ],
            "name": "testTransferFirstNFT",
            "nameLocation": "1159:20:22",
            "parameters": {
              "id": 31819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:22"
            },
            "returnParameters": {
              "id": 31822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31883,
            "nodeType": "FunctionDefinition",
            "src": "1318:203:22",
            "nodes": [],
            "body": {
              "id": 31882,
              "nodeType": "Block",
              "src": "1376:145:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31856,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31848,
                          "src": "1392:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 31857,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31683,
                          "src": "1402:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1392:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31853,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "1382:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14622",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1385:6:22",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14163,
                      "src": "1382:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 31859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31860,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:27:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31864,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31679,
                        "src": "1424:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31861,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "1415:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14622",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1418:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14235,
                      "src": "1415:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31866,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:15:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31870,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1451:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31848,
                        "src": "1458:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31867,
                        "name": "myBAYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31677,
                        "src": "1436:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyBAYC_$31444",
                          "typeString": "contract MyBAYC"
                        }
                      },
                      "id": 31869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1443:7:22",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31218,
                      "src": "1436:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 31872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31873,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31877,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31848,
                            "src": "1500:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31875,
                            "name": "myBAYC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31677,
                            "src": "1481:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyBAYC_$31444",
                              "typeString": "contract MyBAYC"
                            }
                          },
                          "id": 31876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1488:11:22",
                          "memberName": "getApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31242,
                          "src": "1481:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1481:27:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31879,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31681,
                        "src": "1510:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31874,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4311,
                        4336,
                        4349,
                        4365,
                        4407,
                        4449,
                        4491,
                        4528,
                        4565,
                        4602,
                        2149,
                        2174,
                        2204,
                        2229,
                        2288,
                        2313,
                        2343,
                        2368,
                        3841,
                        3876
                      ],
                      "referencedDeclaration": 2149,
                      "src": "1472:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31881,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:44:22"
                }
              ]
            },
            "functionSelector": "3ad3cd8c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31850,
                  "name": "mintByAmount",
                  "nameLocations": [
                    "1363:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31762,
                  "src": "1363:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1363:12:22"
              }
            ],
            "name": "testApprove",
            "nameLocation": "1327:11:22",
            "parameters": {
              "id": 31849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31848,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1347:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 31883,
                  "src": "1339:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:17:22"
            },
            "returnParameters": {
              "id": 31852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:0:22"
            },
            "scope": 31884,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31669,
              "name": "Test",
              "nameLocations": [
                "194:4:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13140,
              "src": "194:4:22"
            },
            "id": 31670,
            "nodeType": "InheritanceSpecifier",
            "src": "194:4:22"
          }
        ],
        "canonicalName": "MyBaYCTest",
        "contractDependencies": [
          31444
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31884,
          13140,
          4180,
          4177,
          13091,
          8870,
          8580,
          7901,
          6304,
          5610,
          4120
        ],
        "name": "MyBaYCTest",
        "nameLocation": "180:10:22",
        "scope": 31885,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}